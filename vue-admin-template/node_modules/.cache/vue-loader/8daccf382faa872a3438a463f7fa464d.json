{"remainingRequest":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/dashboard/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/dashboard/index.vue","mtime":1702207899397},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/css-loader/dist/cjs.js","mtime":1700932422321},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1700932427812},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/postcss-loader/src/index.js","mtime":1700932425787},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/sass-loader/dist/cjs.js","mtime":1700932427044},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700932421620},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1700932427812}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpodG1sIHsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogMDsKfQoKYm9keSB7CiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgbGluZS1oZWlnaHQ6IDEuMmVtOwogIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7Cn0KCmEgewogIGNvbG9yOiAjMzQzNDQwOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQoKLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKLy/pobXpnaLmoLflvI/pg6jliIbvvIHvvIHvvIHvvIEKI2luZGV4IHsKICBjb2xvcjogI2QzZDZkZDsKICB3aWR0aDogMTkyMHB4OwogIGhlaWdodDogMTA4MHB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDUwJTsKICBsZWZ0OiA1MCU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCB0b3A7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKCiAgLmJnIHsKICAgIC8v5pW05L2T6aG16Z2i6IOM5pmvCiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIHBhZGRpbmc6IDE2cHggMTZweCAwIDE2cHg7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoImJnLnBuZyIpICFpbXBvcnRhbnQ7IC8v6IOM5pmv5Zu+CiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyAvL+iDjOaZr+WwuuWvuAogICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjsgLy/og4zmma/kvY3nva4KICB9CgogIC8v6aG26YOo5Y+z6L656KOF6aWw5pWI5p6cCiAgLnRpdGxlX2xlZnQgewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDUwcHg7CiAgfQoKICAvL+mhtumDqOW3pui+ueijhemlsOaViOaenAogIC50aXRsZV9yaWdodCB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogNTBweDsKICAgIG1hcmdpbi10b3A6IDE4cHg7CiAgfQoKICAvL+mhtumDqOS4remXtOijhemlsOaViOaenAogIC50aXRsZV9jZW50ZXIgewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDUwcHg7CiAgfQoKICAvL+mhtumDqOS4remXtOaWh+Wtl+aVsOaNruWPr+inhuWMluezu+e7nwogIC50aXRsZV90ZXh0IHsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGZvbnQtc2l6ZTogMjRweDsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgbWFyZ2luLXRvcDogMTRweDsKICAgIGNvbG9yOiAjMDA4Y2ZmOwogIH0KCiAgLy/ml7bpl7Tml6XmnJ8KICAudGl0bGVfdGltZSB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgfQoKICAvL+S4reWbveWcsOWbvgogICNjaGluYS1tYXAgewogICAgaGVpZ2h0OiA2NjBweDsKICAgIHdpZHRoOiAxMDAlOwogIH0KCiAgLy/kuK3pl7Tmipjnur/lm74KICAubGluZV9jZW50ZXIgewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDI4OHB4OwogIH0KCiAgLy/lt6Yx5qih5Z2XCiAgLmxlZnRfYm94MSB7CiAgICBoZWlnaHQ6IDMxMHB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogIH0KCiAgLy/lt6Yy5qih5Z2XCiAgLmxlZnRfYm94MiB7CiAgICBoZWlnaHQ6IDMxMHB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIH0KCiAgLy/lt6Yz5qih5Z2XCiAgLmxlZnRfYm94MyB7CiAgICBoZWlnaHQ6IDMxMHB4OwogICAgd2lkdGg6IDEwMCU7CiAgfQoKICAvL+WPszHmqKHlnZcKICAucmlnaHRfYm94MSB7CiAgICBoZWlnaHQ6IDMxMHB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIH0KCiAgLy/lj7My5qih5Z2XCiAgLnJpZ2h0X2JveDIgewogICAgaGVpZ2h0OiAzMTBweDsKICAgIHdpZHRoOiAxMDAlOwogICAgbWFyZ2luLWJvdHRvbTogMTBweDsKICB9CgogIC8v5Y+zM+aooeWdlwogIC5yaWdodF9ib3gzIHsKICAgIGhlaWdodDogMzEwcHg7CiAgICB3aWR0aDogMTAwJTsKICB9CgogIC8v5bemMeaooeWdly3njqvnkbDppbzlm74KICAjUm9zZV9kaWFncmFtIHsKICAgIGhlaWdodDogNzAlOwogICAgd2lkdGg6IDU1JTsKICB9CgogIC8v5bemMeaooeWdly3lnIbnjq/lm74KICAubGVmdF9ib3gxX3Jvc2VfcmlnaHQgewogICAgaGVpZ2h0OiA4NSU7CiAgICB3aWR0aDogNTUlOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IDA7CiAgICB0b3A6IDA7CiAgfQoKICAvL+W3pjHmqKHlnZct5paH5a2X6YOo5YiGCiAgLnJvc2VfdGV4dCB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBtYXJnaW4tdG9wOiA0JTsKICAgIG1hcmdpbi1sZWZ0OiA0JTsKICB9CgogIC8vIOW3pjHmqKHlnZct77+l56ym5Y+35qC35byPCiAgLmNvaW4gewogICAgZm9udC1zaXplOiAyMHB4OwogICAgY29sb3I6ICNmZmMxMDc7CiAgfQoKICAvL+W3pjHmqKHlnZct77yI5Lu277yJ5qC35byPCiAgLmNvbG9yWWVsbG93IHsKICAgIGNvbG9yOiB5ZWxsb3dncmVlbjsKICB9CgogIC8v5bemMeaooeWdly3mlbDlrZfmoLflvI8KICAucm9zZV90ZXh0X25tYiB7CiAgICBmb250LXNpemU6IDIwcHg7CiAgICBjb2xvcjogIzAwYjg5MTsKICB9CgogIC8v5bemMuaooeWdlyDmn7Hnirblm74KICAjY29sdW1uYXIgewogICAgaGVpZ2h0OiA5NyU7CiAgICB3aWR0aDogOTUlOwogICAgbWFyZ2luLWxlZnQ6IDMlOwogICAgbWFyZ2luLXRvcDogNXB4OwogIH0KCiAgLy/mipjnur/lm74KICAjbGluZV9jZW50ZXJfZGlhZ3JhbSB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogMTAwJTsKICB9CgogIC8v6L2u5pKt6KGo5qC8CiAgLmNhcm91c2VsX2xpc3QgewogICAgd2lkdGg6IDk2JTsKICAgIGhlaWdodDogOTglOwogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgfQoKICAvL+iZmue6v+afseeKtuWbvgogICNkb3R0ZXJfYmFyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogIH0KCiAgLy/plKXlvaLlm74KICAuY29uZV9ib3ggewogICAgd2lkdGg6IDk1JTsKICAgIGhlaWdodDogOTclOwogICAgbWFyZ2luLWxlZnQ6IDMlOwogIH0KfQoKLmFsbHsKICBwYWRkaW5nOiAxMHB4OwogIG1hcmdpbjogMTBweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsifile":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div id=\"index\" ref=\"appRef\" class=\"all\">\n    <div class=\"bg\">\n      <dv-loading v-show=\"loading\">Loading...</dv-loading>\n      <div class=\"host-body\">\n        <div>\n          <!-- 顶部title部分 -->\n          <el-row>\n            <el-col :span=\"6\"\n            >\n              <dv-decoration-8\n                class=\"title_right\"\n                :color=\"['#008CFF', '#00ADDD']\"\n              />\n            </el-col>\n            <el-col :span=\"12\"\n            >\n              <div class=\"title_text\">医 疗 可 视 化 系 统</div>\n              <dv-decoration-5\n                class=\"title_center\"\n                :color=\"['#008CFF', '#00ADDD']\"\n              />\n            </el-col>\n            <el-col :span=\"6\"\n            >\n              <div class=\"title_time\">{{ dateYear + dateWeek + dateDay }}</div>\n              <dv-decoration-8\n                :reverse=\"true\"\n                class=\"title_left\"\n                :color=\"['#008CFF', '#00ADDD']\"\n              />\n            </el-col>\n          </el-row>\n          <!-- 主体部分 -->\n          <el-row>\n            <!-- 第一列 -->\n            <el-col :span=\"6\">\n              <!-- 饼图部分 -->\n              <div class=\"left_box1\">\n                <dv-border-box-12>\n                  <div id=\"Rose_diagram\"></div>\n                  <dv-active-ring-chart\n                    :config=\"config\"\n                    class=\"left_box1_rose_right\"\n                  />\n                  <div\n                    class=\"rose_text\"\n                    v-for=\"(item, index) in numberData\"\n                    :key=\"index\"\n                  >\n                    <p>\n                      <span class=\"coin\">￥</span>\n                      <span class=\"rose_text_nmb\">{{\n                          item.number.number\n                        }}</span>\n                    </p>\n                    <p>\n                      <span>{{ item.text }}</span>\n                      <span class=\"colorYellow\">(位)</span>\n                    </p>\n                  </div>\n                </dv-border-box-12>\n              </div>\n              <!-- 柱状图部分 -->\n              <div class=\"left_box2\">\n                <dv-border-box-12 style=\"padding-top: 10px\">\n                  <p style=\"margin-left: 15px\">数据统计图</p>\n                  <div id=\"columnar\"></div>\n                </dv-border-box-12>\n              </div>\n              <!-- 轮播表格部分 -->\n              <div class=\"left_box3\">\n                <dv-border-box-12 style=\"padding-top: 10px\">\n                  <dv-scroll-board\n                    :config=\"board_info\"\n                    class=\"carousel_list\"\n                    oddRowBGC=\"#fff\"\n                  />\n                </dv-border-box-12>\n              </div>\n            </el-col>\n            <!-- 第二列 -->\n            <el-col :span=\"12\">\n              <!-- 中国地图 -->\n              <div id=\"china-map\"></div>\n              <!-- 折线图 -->\n              <div class=\"line_center\">\n                <dv-border-box-8>\n                  <div id=\"line_center_diagram\"></div>\n                </dv-border-box-8>\n              </div>\n            </el-col>\n            <!-- 第三列 -->\n            <el-col :span=\"6\">\n              <!-- 轮播排行榜部分 -->\n              <div class=\"right_box1\">\n                <dv-border-box-12>\n                  <dv-decoration-7 style=\"width: 100%; height: 30px\"\n                  >医 疗 货 物 补 给\n                  </dv-decoration-7\n                  >\n                  <dv-scroll-ranking-board\n                    :config=\"config\"\n                    style=\"width: 95%; height: 87%; margin-left: 2%\"\n                  />\n                </dv-border-box-12>\n              </div>\n              <!-- 虚线柱状图部分 -->\n              <div class=\"right_box2\">\n                <dv-border-box-12 :reverse=\"true\">\n                  <div id=\"dotter_bar\"></div>\n                </dv-border-box-12>\n              </div>\n              <!-- 部分 -->\n              <div class=\"right_box3\">\n                <dv-border-box-12 :reverse=\"true\">\n                  <dv-conical-column-chart :config=\"cone\" class=\"cone_box\"/>\n                </dv-border-box-12>\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport drawMixin from \"@/utils/drawMixin\"; //自适应缩放\nimport {formatTime} from \"@/utils/month\"; //日期格式转换\nimport * as echarts from \"echarts\";\n\nexport default {\n  mixins: [drawMixin],\n  data() {\n    return {\n      //定时器\n      timing: null,\n      //loading图\n      loading: true,\n      //时分秒\n      dateDay: null,\n      //年月日\n      dateYear: null,\n      //周几\n      dateWeek: null,\n      //周几\n      weekday: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"],\n      //轮播排行榜\n      config: {\n        data: [\n          {\n            name: \"周口\",\n            value: 55,\n          },\n          {\n            name: \"南阳\",\n            value: 120,\n          },\n          {\n            name: \"西峡\",\n            value: 78,\n          },\n          {\n            name: \"驻马店\",\n            value: 66,\n          },\n          {\n            name: \"新乡\",\n            value: 80,\n          },\n          {\n            name: \"信阳\",\n            value: 45,\n          },\n          {\n            name: \"漯河\",\n            value: 29,\n          },\n        ],\n      },\n      //左侧饼图文字\n      numberData: [\n        {\n          number: {\n            number: 1185,\n          },\n          text: \"今日就诊人数总量\",\n        },\n        {\n          number: {\n            number: 382,\n          },\n          text: \"目前院内人数\",\n        },\n        {\n          number: {\n            number: 172,\n          },\n          text: \"排队人数\",\n        },\n      ],\n      //左侧轮播表格配置项\n      board_info: {\n        header: [\"人员\", \"月就诊人数\", \"患者满意度\"],\n        data: [\n          [\"张三\", \"10830\", \"90%\"],\n          [\"张四\", \"13500\", \"92%\"],\n          [\"张五\", \"10350\", \"97%\"],\n          [\"张六\", \"13300\", \"94%\"],\n          [\"张七\", \"12500\", \"95%\"],\n          [\"张八\", \"11500\", \"96%\"],\n          [\"张九\", \"12500\", \"89%\"],\n          [\"王六\", \"10360\", \"95%\"],\n          [\"王二\", \"10567\", \"91%\"],\n          [\"李四\", \"15721\", \"99%\"],\n        ],\n        evenRowBGC: \"#020308\",\n        oddRowBGC: \"#382B47\",\n        headerBGC: \"#020308\",\n      },\n      // 定义颜色\n      colorList: {\n        linearYtoG: {\n          type: \"linear\",\n          x: 0,\n          y: 0,\n          x2: 1,\n          y2: 1,\n          colorStops: [\n            {\n              offset: 0,\n              color: \"#f5b44d\",\n            },\n            {\n              offset: 1,\n              color: \"#28f8de\",\n            },\n          ],\n        },\n        linearGtoB: {\n          type: \"linear\",\n          x: 0,\n          y: 0,\n          x2: 1,\n          y2: 0,\n          colorStops: [\n            {\n              offset: 0,\n              color: \"#43dfa2\",\n            },\n            {\n              offset: 1,\n              color: \"#28f8de\",\n            },\n          ],\n        },\n        linearBtoG: {\n          type: \"linear\",\n          x: 0,\n          y: 0,\n          x2: 1,\n          y2: 0,\n          colorStops: [\n            {\n              offset: 0,\n              color: \"#1c98e8\",\n            },\n            {\n              offset: 1,\n              color: \"#28f8de\",\n            },\n          ],\n        },\n        areaBtoG: {\n          type: \"linear\",\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [\n            {\n              offset: 0,\n              color: \"rgba(35,184,210,.2)\",\n            },\n            {\n              offset: 1,\n              color: \"rgba(35,184,210,0)\",\n            },\n          ],\n        },\n      },\n      //锥形柱状图\n      cone: {\n        data: [\n          {\n            name: \"周口\",\n            value: 55,\n          },\n          {\n            name: \"南阳\",\n            value: 120,\n          },\n          {\n            name: \"西峡\",\n            value: 71,\n          },\n          {\n            name: \"驻马店\",\n            value: 66,\n          },\n          {\n            name: \"新乡\",\n            value: 80,\n          },\n          {\n            name: \"信阳\",\n            value: 35,\n          },\n          {\n            name: \"漯河\",\n            value: 15,\n          },\n        ],\n        showValue: true,\n      },\n    };\n  },\n\n  mounted() {\n    //获取实时时间\n    this.timeFn();\n    //加载loading图\n    this.cancelLoading();\n    //中国地图\n    this.china_map();\n    //左侧玫瑰饼图\n    this.Rose_diagram();\n    //左侧柱状图\n    this.columnar();\n    //中间折线图\n    this.line_center_diagram();\n    //虚线柱状图\n    this.dotter_bar();\n  },\n  beforeDestroy() {\n    //离开时删除计时器\n    clearInterval(this.timing);\n  },\n  methods: {\n    //右上角当前日期时间显示：每一秒更新一次最新时间\n    timeFn() {\n      this.timing = setInterval(() => {\n        //获取当前时分秒\n        this.dateDay = formatTime(new Date(), \"HH: mm: ss\");\n        //获取当前年月日\n        this.dateYear = formatTime(new Date(), \"yyyy-MM-dd\");\n        //获取当前周几\n        this.dateWeek = this.weekday[new Date().getDay()];\n      }, 1000);\n    },\n    //loading图\n    cancelLoading() {\n      setTimeout(() => {\n        this.loading = false;\n      }, 500);\n    },\n    //中国地图\n    china_map() {\n      let mapChart = this.$echarts.init(document.getElementById(\"china-map\")); //图表初始化，china-map是绑定的元素\n      window.onresize = mapChart.resize; //如果容器变大小，自适应从新构图\n      let series = []; //存放循环配置项\n      let res = []; //存放射线的起始点和结束点位置\n      let province = []; //存放有射线的省的名字，以此来拿到对应省份的坐标\n      //提前存好的所有省份坐标，用于后面根据名字拿到对应的左边\n      let chinaGeoCoordMap = {\n        新疆: [86.9023, 41.148],\n        西藏: [87.8695, 31.6846],\n        内蒙古: [110.5977, 41.3408],\n        青海: [95.2402, 35.4199],\n        四川: [102.9199, 30.1904],\n        黑龙江: [128.1445, 46.7156],\n        甘肃: [102.7129, 38.166],\n        云南: [101.0652, 24.6807],\n        广西: [108.7813, 23.6426],\n        湖南: [111.5332, 27.3779],\n        陕西: [108.5996, 33.7396],\n        广东: [113.8668, 22.8076],\n        吉林: [126.1746, 43.5938],\n        河北: [115.4004, 38.1688],\n        湖北: [112.2363, 30.8572],\n        贵州: [106.6113, 26.6385],\n        山东: [118.2402, 36.2307],\n        江西: [115.7156, 27.99],\n        河南: [113.0668, 33.8818],\n        辽宁: [123.0438, 41.0889],\n        山西: [112.4121, 36.6611],\n        安徽: [117.2461, 31.0361],\n        福建: [118.3008, 25.9277],\n        浙江: [120.498, 29.0918],\n        江苏: [119.8586, 32.915],\n        重庆: [107.7539, 29.8904],\n        宁夏: [105.9961, 37.1096],\n        海南: [109.9512, 19.2041],\n        台湾: [120.8254, 23.5986],\n        北京: [116.4551, 40.2539],\n        天津: [117.4219, 39.4189],\n        上海: [121.4648, 31.2891],\n        香港: [114.6178, 22.3242],\n        澳门: [113.5547, 21.6484],\n      };\n      //后台给的数据模拟\n      let lineData = [\n        {\n          val: 32, //数据\n          blat: [86.9023, 41.148], //发射点\n          elon: [87.8695, 31.6846], //接收点\n          bcitysim: \"新疆\", //发射省的名字\n          ecitysim: \"西藏\", //接收省的名字\n        },\n        {\n          val: 31,\n          blat: [87.8695, 31.6846],\n          elon: [95.2402, 35.4199],\n          bcitysim: \"西藏\",\n          ecitysim: \"青海\",\n        },\n        {\n          val: 33,\n          blat: [86.9023, 41.148],\n          elon: [95.2402, 35.4199],\n          bcitysim: \"新疆\",\n          ecitysim: \"青海\",\n        },\n        {\n          val: 33,\n          blat: [116.4551, 40.2539],\n          elon: [119.8586, 32.915],\n          bcitysim: \"北京\",\n          ecitysim: \"江苏\",\n        },\n        {\n          val: 33,\n          blat: [120.8254, 23.5986],\n          elon: [109.9512, 19.2041],\n          bcitysim: \"台湾\",\n          ecitysim: \"海南\",\n        },\n        {\n          val: 33,\n          blat: [120.498, 29.0918],\n          elon: [115.7156, 27.99],\n          bcitysim: \"浙江\",\n          ecitysim: \"江西\",\n        },\n        {\n          val: 33,\n          blat: [117.2461, 31.0361],\n          elon: [119.8586, 32.915],\n          bcitysim: \"安徽\",\n          ecitysim: \"江苏\",\n        },\n        {\n          val: 33,\n          blat: [117.2461, 31.0361],\n          elon: [105.9961, 37.1096],\n          bcitysim: \"安徽\",\n          ecitysim: \"宁夏\",\n        },\n        {\n          val: 33,\n          blat: [117.2461, 31.0361],\n          elon: [107.7539, 29.8904],\n          bcitysim: \"安徽\",\n          ecitysim: \"重庆\",\n        },\n        {\n          val: 33,\n          blat: [117.2461, 31.0361],\n          elon: [123.0438, 41.0889],\n          bcitysim: \"安徽\",\n          ecitysim: \"辽宁\",\n        },\n        {\n          val: 33,\n          blat: [119.8586, 32.915],\n          elon: [102.7129, 38.166],\n          bcitysim: \"江苏\",\n          ecitysim: \"甘肃\",\n        },\n        {\n          val: 33,\n          blat: [119.8586, 32.915],\n          elon: [128.1445, 46.7156],\n          bcitysim: \"江苏\",\n          ecitysim: \"黑龙江\",\n        },\n        {\n          val: 33,\n          blat: [119.8586, 32.915],\n          elon: [110.5977, 41.3408],\n          bcitysim: \"江苏\",\n          ecitysim: \"内蒙古\",\n        },\n        {\n          val: 33,\n          blat: [119.8586, 32.915],\n          elon: [101.0652, 24.6807],\n          bcitysim: \"江苏\",\n          ecitysim: \"云南\",\n        },\n        {\n          val: 33,\n          blat: [119.8586, 32.915],\n          elon: [86.9023, 41.148],\n          bcitysim: \"江苏\",\n          ecitysim: \"新疆\",\n        },\n        {\n          val: 33,\n          blat: [86.9023, 41.148],\n          elon: [110.5977, 41.3408],\n          bcitysim: \"新疆\",\n          ecitysim: \"内蒙古\",\n        },\n        {\n          val: 33,\n          blat: [86.9023, 41.148],\n          elon: [102.9199, 30.1904],\n          bcitysim: \"新疆\",\n          ecitysim: \"四川\",\n        },\n      ];\n      //循环拿到处理好的数据\n      for (var i = 0; i < lineData.length; i++) {\n        province.push(lineData[i].bcitysim); //存进去每个省的名字\n        province.push(lineData[i].ecitysim); //存进去每个省的名字\n        res.push({\n          fromName: lineData[i].bcitysim, //发射的省名，保存用于弹框显示\n          toName: lineData[i].ecitysim, //接收的省名，保存用于弹框显示\n          coords: [\n            lineData[i].blat, //发射\n            lineData[i].elon, //接收\n          ],\n          count: lineData[i].val, //数据\n        });\n      }\n      let index_data = new Set(province); //把省的名字去重\n      let data_res = []; //定义一个新的变量存放省的坐标\n\n      //注意这里一定要用name和value的形式。不是这个格式的散点图显示不出来\n      index_data.forEach((item) => {\n        data_res.push({\n          name: item, //每个省的名字\n          value: chinaGeoCoordMap[item], //每个省的坐标\n        });\n      });\n      //循环往series内添加配置项\n      series.push(\n        {\n          //射线效果图层\n          type: \"lines\", //类型：射线\n          zlevel: 1, //类似图层效果\n          effect: {\n            show: true, //是否显示图标\n            symbol: \"arrow\", //箭头图标\n            symbolSize: 5, //图标大小\n            trailLength: 0.02, //特效尾迹长度[0,1]值越大，尾迹越长重\n          },\n          label: {\n            show: true,\n          },\n          lineStyle: {\n            color: \"#fff\",\n            normal: {\n              color: \"#00A0FF\",\n              width: 1, //尾迹线条宽度\n              opacity: 0.5, //尾迹线条透明度\n              curveness: 0.1, //尾迹线条曲直度\n            },\n          },\n          //提示框信息\n          tooltip: {\n            formatter: function (param) {\n              return (\n                param.data.fromName +\n                \">\" +\n                param.data.toName +\n                \"<br>数量：\" +\n                param.data.count\n              );\n            },\n          },\n          data: res, //拿到射线的起始点和结束点\n        },\n        {\n          type: \"map\",\n          mapType: \"china\",\n          zlevel: 1,\n          roam: true,\n          geoIndex: 0,\n          tooltip: {\n            show: true,\n          },\n          itemStyle: {\n            areaColor: \"#00196d\",\n            borderColor: \"#0a53e9\",\n          },\n          emphasis: {\n            show: true,\n            label: {\n              normal: {\n                show: true, // 是否显示对应地名\n                textStyle: {\n                  color: \"#fff\",\n                },\n              },\n            },\n            itemStyle: {\n              areaColor: \"#00196d\",\n              borderColor: \"#0a53e9\",\n            },\n          },\n        }\n      );\n      //配置\n      let option = {\n        legend: {\n          show: true,\n          selected: {},\n          x: \"left\",\n          orient: \"vertical\",\n          textStyle: {\n            color: \"white\",\n          },\n          data: [],\n        },\n        //鼠标移上去的弹框\n        tooltip: {\n          trigger: \"item\",\n          show: true,\n        },\n        //geo：这是重点\n        geo: {\n          map: \"china\", //中国地图\n          zoom: 1.2, //缩放倍数\n          roam: false, //是否允许缩放和拖拽地图\n          label: {\n            normal: {\n              show: true, // 是否显示省份名字，现在是隐藏的状态，因为和散点图的名字重叠了。如果需要就true\n              textStyle: {\n                //名字的样式\n                color: \"#fff\",\n              },\n            },\n            emphasis: {\n              show: true,\n            },\n          },\n          //地图样式\n          itemStyle: {\n            normal: {\n              borderColor: \"#293171\", //地图边框颜色\n              borderWidth: \"2\", //地图边框粗细\n              areaColor: \"#0A0F33\", //地图背景色\n            },\n            //省份地图阴影\n            emphasis: {\n              areaColor: null,\n              shadowOffsetX: 0,\n              shadowOffsetY: 0,\n              shadowBlur: 20,\n              borderWidth: 0,\n              shadowColor: \"#fff\",\n            },\n          },\n        },\n        series: series, //图表配置\n      };\n      mapChart.setOption(option); //生成图表\n    },\n    //玫瑰饼图\n    Rose_diagram() {\n      let mapChart = this.$echarts.init(\n        document.getElementById(\"Rose_diagram\")\n      ); //图表初始化，china-map是绑定的元素\n      window.onresize = mapChart.resize; //如果容器变大小，自适应从新构图\n      let option = {\n        color: [\n          \"#37a2da\",\n          \"#32c5e9\",\n          \"#9fe6b8\",\n          \"#ffdb5c\",\n          \"#ff9f7f\",\n          \"#fb7293\",\n          \"#e7bcf3\",\n          \"#8378ea\",\n        ],\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n        },\n        toolbox: {\n          show: true,\n        },\n        calculable: true,\n        legend: {\n          orient: \"horizontal\",\n          icon: \"circle\",\n          bottom: 0,\n          x: \"center\",\n          data: [\"data1\", \"data2\", \"data3\", \"data4\", \"data5\", \"data6\"],\n          textStyle: {\n            color: \"#fff\",\n          },\n        },\n        series: [\n          {\n            name: \"通过率统计\",\n            type: \"pie\",\n            radius: [10, 50],\n            roseType: \"area\",\n            center: [\"50%\", \"40%\"],\n            data: [\n              {value: 10, name: \"data1\"},\n              {value: 5, name: \"data2\"},\n              {value: 15, name: \"data3\"},\n              {value: 25, name: \"data4\"},\n              {value: 20, name: \"data5\"},\n              {value: 35, name: \"data6\"},\n            ],\n          },\n        ],\n      };\n      mapChart.setOption(option); //生成图表\n    },\n    //柱状图\n    columnar() {\n      let mapChart = this.$echarts.init(document.getElementById(\"columnar\")); //图表初始化，china-map是绑定的元素\n      window.onresize = mapChart.resize; //如果容器变大小，自适应从新构图\n      let option = {\n        title: {\n          text: \"\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          backgroundColor: \"rgba(255,255,255,0.1)\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              show: true,\n              backgroundColor: \"#7B7DDC\",\n            },\n          },\n        },\n        legend: {\n          data: [\"阳性\", \"阴性\", \"比例\"],\n          textStyle: {\n            color: \"#B4B4B4\",\n          },\n          top: \"0%\",\n        },\n        grid: {\n          x: \"8%\",\n          width: \"95%\",\n          y: \"4%\",\n        },\n        xAxis: {\n          data: [\n            \"市区\",\n            \"万州\",\n            \"江北\",\n            \"南岸\",\n            \"北碚\",\n            \"綦南\",\n            \"长寿\",\n            \"永川\",\n            \"璧山\",\n            \"江津\",\n            \"城口\",\n            \"大足\",\n            \"垫江\",\n            \"丰都\",\n            \"奉节\",\n            \"合川\",\n            \"江津区\",\n            \"开州\",\n            \"南川\",\n            \"彭水\",\n            \"黔江\",\n            \"石柱\",\n            \"铜梁\",\n            \"潼南\",\n            \"巫山\",\n            \"巫溪\",\n            \"武隆\",\n            \"秀山\",\n            \"酉阳\",\n            \"云阳\",\n            \"忠县\",\n            \"川东\",\n            \"检修\",\n          ],\n          axisLine: {\n            lineStyle: {\n              color: \"#B4B4B4\",\n            },\n          },\n          axisTick: {\n            show: false,\n          },\n        },\n        yAxis: [\n          {\n            splitLine: {show: false},\n            axisLine: {\n              lineStyle: {\n                color: \"#B4B4B4\",\n              },\n            },\n\n            axisLabel: {\n              formatter: \"{value} \",\n            },\n          },\n        ],\n        series: [\n          {\n            name: \"已贯通\",\n            type: \"bar\",\n            barWidth: 10,\n            itemStyle: {\n              normal: {\n                barBorderRadius: 5,\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {offset: 0, color: \"#956FD4\"},\n                  {offset: 1, color: \"#3EACE5\"},\n                ]),\n              },\n            },\n            data: [\n              46, 50, 55, 650, 75, 85, 99, 125, 140, 215, 232, 244, 252, 333,\n              46, 50, 55, 65, 75, 85, 99, 225, 140, 215, 85, 99, 125, 140, 215,\n              232, 244, 252, 75,\n            ],\n          },\n          {\n            name: \"计划贯通\",\n            type: \"bar\",\n            barGap: \"-100%\",\n            barWidth: 10,\n            itemStyle: {\n              normal: {\n                barBorderRadius: 5,\n                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {offset: 0, color: \"rgba(156,107,211,0.8)\"},\n                  {offset: 0.2, color: \"rgba(156,107,211,0.5)\"},\n                  {offset: 1, color: \"rgba(156,107,211,0.2)\"},\n                ]),\n              },\n            },\n            z: -12,\n            data: [\n              180, 207, 240, 283, 328, 360, 398, 447, 484, 504, 560, 626, 595,\n              675, 180, 207, 240, 283, 328, 360, 398, 447, 484, 504, 360, 398,\n              447, 484, 504, 500, 326, 495, 328,\n            ],\n          },\n        ],\n      };\n      mapChart.setOption(option); //生成图表\n    },\n    //折线图\n    line_center_diagram() {\n      let mapChart = this.$echarts.init(\n        document.getElementById(\"line_center_diagram\")\n      ); //图表初始化，china-map是绑定的元素\n      window.onresize = mapChart.resize; //如果容器变大小，自适应从新构图\n      let option = {\n        xAxis: {\n          type: \"category\",\n          data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n          position: \"bottom\",\n          axisLine: true,\n          axisLabel: {\n            color: \"rgba(255,255,255,.8)\",\n            fontSize: 12,\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"年度生产量\",\n          nameLocation: \"end\",\n          nameGap: 24,\n          nameTextStyle: {\n            color: \"rgba(255,255,255,.5)\",\n            fontSize: 14,\n          },\n          splitNumber: 4,\n          axisLine: {\n            lineStyle: {\n              opacity: 0,\n            },\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#fff\",\n              opacity: 0.1,\n            },\n          },\n          axisLabel: {\n            color: \"rgba(255,255,255,.8)\",\n            fontSize: 12,\n          },\n        },\n        grid: {\n          left: 50,\n          right: 10,\n          bottom: 25,\n          top: \"18%\",\n        },\n        series: [\n          {\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\n            type: \"line\",\n            smooth: true,\n            symbol: \"emptyCircle\",\n            symbolSize: 8,\n            itemStyle: {\n              normal: {\n                color: \"#fff\",\n              },\n            },\n            //线的颜色样式\n            lineStyle: {\n              normal: {\n                color: this.colorList.linearBtoG,\n                width: 3,\n              },\n            },\n            //填充颜色样式\n            areaStyle: {\n              normal: {\n                color: this.colorList.areaBtoG,\n              },\n            },\n          },\n        ],\n      };\n      mapChart.setOption(option); //生成图表\n    },\n    //右侧虚线柱状图图\n    dotter_bar() {\n      let mapChart = this.$echarts.init(document.getElementById(\"dotter_bar\")); //图表初始化，china-map是绑定的元素\n      window.onresize = mapChart.resize; //如果容器变大小，自适应从新构图\n      // Generate data\n      let category = [];\n      let dottedBase = +new Date();\n      let lineData = [];\n      let barData = [];\n      for (let i = 0; i < 20; i++) {\n        let date = new Date((dottedBase += 3600 * 24 * 1000));\n        category.push(\n          [date.getFullYear(), date.getMonth() + 1, date.getDate()].join(\"-\")\n        );\n        let b = Math.random() * 200;\n        let d = Math.random() * 200;\n        barData.push(b);\n        lineData.push(d + b);\n      }\n      // option\n      let option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n          },\n        },\n        grid: {\n          left: 50,\n          right: 10,\n          bottom: 25,\n          top: \"18%\",\n        },\n        legend: {\n          data: [\"line\", \"bar\"],\n          textStyle: {\n            color: \"#ccc\",\n          },\n        },\n        xAxis: {\n          data: category,\n          axisLine: {\n            lineStyle: {\n              color: \"#ccc\",\n            },\n          },\n        },\n        yAxis: {\n          splitLine: {show: false},\n          axisLine: {\n            lineStyle: {\n              color: \"#ccc\",\n            },\n          },\n        },\n        series: [\n          {\n            name: \"line\",\n            type: \"line\",\n            smooth: true,\n            showAllSymbol: true,\n            symbol: \"emptyCircle\",\n            symbolSize: 15,\n            data: lineData,\n          },\n          {\n            name: \"bar\",\n            type: \"bar\",\n            barWidth: 10,\n            itemStyle: {\n              borderRadius: 5,\n              // color: \"#14c8d4\",\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {offset: 0, color: \"#14c8d4\"},\n                {offset: 1, color: \"#43eec6\"},\n              ]),\n            },\n            data: barData,\n          },\n          {\n            name: \"line\",\n            type: \"bar\",\n            barGap: \"-100%\",\n            barWidth: 10,\n            itemStyle: {\n              // color: \"rgba(20,200,212,0.5)\",\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {offset: 0, color: \"rgba(20,200,212,0.5)\"},\n                {offset: 0.2, color: \"rgba(20,200,212,0.2)\"},\n                {offset: 1, color: \"rgba(20,200,212,0)\"},\n              ]),\n            },\n            z: -12,\n            data: lineData,\n          },\n          {\n            name: \"dotted\",\n            type: \"pictorialBar\",\n            symbol: \"rect\",\n            itemStyle: {\n              color: \"#0f375f\",\n            },\n            symbolRepeat: true,\n            symbolSize: [12, 4],\n            symbolMargin: 1,\n            z: -10,\n            data: lineData,\n          },\n        ],\n      };\n      mapChart.setOption(option); //生成图表\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n\nhtml {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n  line-height: 1.2em;\n  background-color: #f1f1f1;\n  margin: 0;\n  padding: 0;\n}\n\na {\n  color: #343440;\n  text-decoration: none;\n}\n\n//--------------------------------------------\n\n//页面样式部分！！！！\n#index {\n  color: #d3d6dd;\n  width: 1920px;\n  height: 1080px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transform-origin: left top;\n  overflow: hidden;\n\n  .bg {\n    //整体页面背景\n    width: 100%;\n    height: 100%;\n    padding: 16px 16px 0 16px;\n    background-image: url(\"bg.png\") !important; //背景图\n    background-size: cover; //背景尺寸\n    background-position: center center; //背景位置\n  }\n\n  //顶部右边装饰效果\n  .title_left {\n    width: 100%;\n    height: 50px;\n  }\n\n  //顶部左边装饰效果\n  .title_right {\n    width: 100%;\n    height: 50px;\n    margin-top: 18px;\n  }\n\n  //顶部中间装饰效果\n  .title_center {\n    width: 100%;\n    height: 50px;\n  }\n\n  //顶部中间文字数据可视化系统\n  .title_text {\n    text-align: center;\n    font-size: 24px;\n    font-weight: bold;\n    margin-top: 14px;\n    color: #008cff;\n  }\n\n  //时间日期\n  .title_time {\n    text-align: center;\n  }\n\n  //中国地图\n  #china-map {\n    height: 660px;\n    width: 100%;\n  }\n\n  //中间折线图\n  .line_center {\n    width: 100%;\n    height: 288px;\n  }\n\n  //左1模块\n  .left_box1 {\n    height: 310px;\n    width: 100%;\n    margin-bottom: 10px;\n    position: relative;\n  }\n\n  //左2模块\n  .left_box2 {\n    height: 310px;\n    width: 100%;\n    margin-bottom: 10px;\n  }\n\n  //左3模块\n  .left_box3 {\n    height: 310px;\n    width: 100%;\n  }\n\n  //右1模块\n  .right_box1 {\n    height: 310px;\n    width: 100%;\n    margin-bottom: 10px;\n  }\n\n  //右2模块\n  .right_box2 {\n    height: 310px;\n    width: 100%;\n    margin-bottom: 10px;\n  }\n\n  //右3模块\n  .right_box3 {\n    height: 310px;\n    width: 100%;\n  }\n\n  //左1模块-玫瑰饼图\n  #Rose_diagram {\n    height: 70%;\n    width: 55%;\n  }\n\n  //左1模块-圆环图\n  .left_box1_rose_right {\n    height: 85%;\n    width: 55%;\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n\n  //左1模块-文字部分\n  .rose_text {\n    display: inline-block;\n    margin-top: 4%;\n    margin-left: 4%;\n  }\n\n  // 左1模块-￥符号样式\n  .coin {\n    font-size: 20px;\n    color: #ffc107;\n  }\n\n  //左1模块-（件）样式\n  .colorYellow {\n    color: yellowgreen;\n  }\n\n  //左1模块-数字样式\n  .rose_text_nmb {\n    font-size: 20px;\n    color: #00b891;\n  }\n\n  //左2模块 柱状图\n  #columnar {\n    height: 97%;\n    width: 95%;\n    margin-left: 3%;\n    margin-top: 5px;\n  }\n\n  //折线图\n  #line_center_diagram {\n    height: 100%;\n    width: 100%;\n  }\n\n  //轮播表格\n  .carousel_list {\n    width: 96%;\n    height: 98%;\n    margin-left: 10px;\n  }\n\n  //虚线柱状图\n  #dotter_bar {\n    width: 100%;\n    height: 100%;\n  }\n\n  //锥形图\n  .cone_box {\n    width: 95%;\n    height: 97%;\n    margin-left: 3%;\n  }\n}\n\n.all{\n  padding: 10px;\n  margin: 10px;\n}\n</style>\n"]}]}