{"remainingRequest":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/test/index.vue?vue&type=style&index=0&id=f3a85fa2&scoped=true&lang=scss&","dependencies":[{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/test/index.vue","mtime":1702049730953},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/css-loader/dist/cjs.js","mtime":1700932422321},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1700932427812},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/postcss-loader/src/index.js","mtime":1700932425787},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/sass-loader/dist/cjs.js","mtime":1700932427044},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700932421620},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1700932427812}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGZvbnQtZmFjZSB7CiAgZm9udC1mYW1pbHk6IGVsZWN0cm9uaWNGb250OwogIHNyYzogdXJsKC9zdGF0aWMvZm9udC9EUy1ESUdJVC5UVEYpOwp9CgpAaW1wb3J0ICJAL3N0eWxlL19oYW5kbGUuc2NzcyI7Ci8vIOaVsOaNruWkp+Wxj+WuueWZqAouZGF0YS1jb250YWluZXIgewogIGhlaWdodDogMTAwJTsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL3N0YXRpYy9pbWcvYmcucG5nKTsKICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47CiAgLy8g5aS06YOo5qCH6aKYCiAgLmhlYWRlciB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBoZWlnaHQ6IDEuMDI1cmVtOwogICAgYmFja2dyb3VuZDogdXJsKC9zdGF0aWMvaW1nL3RpdGxlX2JnLnBuZykgbm8tcmVwZWF0OwogICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgZm9udC1zaXplOiAwLjQ1cmVtOwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgQGluY2x1ZGUgZm9udF9jb2xvcigidGl0bGVfY29sb3IiKTsKICAgIGxpbmUtaGVpZ2h0OiAxLjAyNXJlbTsKICAgIGZvbnQtd2VpZ2h0OiA3MDA7CiAgICBmb250LWZhbWlseTogTWljcm9zb2Z0IFlhSGVpIEJvbGQsIE1pY3Jvc29mdCBZYUhlaSBCb2xkLUJvbGQ7CgogICAgLy8g6aG26YOo5Y+z5L6n5pe26ZKfCiAgICAuZGF0ZS10aW1lLXdyYXAgewogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIHRvcDogMDsKICAgICAgcmlnaHQ6IDA7CiAgICAgIGhlaWdodDogMC41NjI1cmVtOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwoKICAgICAgLnRpbWUgewogICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICB3aWR0aDogMS4yNXJlbTsKICAgICAgICBmb250LXNpemU6IDAuM3JlbTsKICAgICAgICBmb250LXdlaWdodDogNzAwOwogICAgICAgIEBpbmNsdWRlIGZvbnRfY29sb3IoInRpbWVfY29sb3IiKTsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgIH0KCiAgICAgIC5kYXRlLXdyYXAgewogICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGZsZXgtZmxvdzogY29sdW1uOwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgZm9udC1zaXplOiAwLjE3NXJlbTsKICAgICAgICBAaW5jbHVkZSBmb250X2NvbG9yKCJ0aW1lX2NvbG9yIik7CiAgICAgICAgbWFyZ2luOiAwIDAuMTI1cmVtIDAgMC4yNXJlbTsKCiAgICAgICAgLmRhdGUsCiAgICAgICAgLndlZWsgewogICAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgICAgbGluZS1oZWlnaHQ6IDA7CiAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgogIC8vIOWGheWuuQogIC5jb250ZW50IHsKICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDEuMDI1cmVtKTsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBkaXNwbGF5OiBmbGV4OwoKICAgIC5jb2x1bW4gewogICAgICAvLyBmbGV4OiAxOwogICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmbGV4LWZsb3c6IGNvbHVtbjsKICAgICAgbWFyZ2luOiAwLjE4NzVyZW0gMC4yNXJlbTsKCiAgICAgICYubGVmdCB7CiAgICAgICAgbWluLXdpZHRoOiA1LjMzNzVyZW07CiAgICAgIH0KCiAgICAgICYuY2VudGVyIHsKICAgICAgICBtaW4td2lkdGg6IDguMTI1cmVtOwogICAgICB9CgogICAgICAmLnJpZ2h0IHsKICAgICAgICBtaW4td2lkdGg6IDkuMTI1cmVtOwogICAgICB9CgogICAgICAvLyDlm77moIfnm5LlrZDpgJrnlKjmoLflvI8KICAgICAgLmNoYXJ0LWJveCB7CiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgIGJvcmRlci13aWR0aDogMXB4OwogICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7CiAgICAgICAgQGluY2x1ZGUgYm9yZGVyX2NvbG9yKCJjaGFydF9ib3hfYm9yZGVyX2NvbG9yIik7CiAgICAgICAgQGluY2x1ZGUgdGhlbWVpZnkgewogICAgICAgICAgYm94LXNoYWRvdzogMCAwIDIwcHggMCB0aGVtZWQoImJveF9zaGFkb3dfY29sb3IiKSBpbnNldDsKICAgICAgICB9CgogICAgICAgIC8vIOiPseW9ouagh+mimOahhuagt+W8jwogICAgICAgIC50aXRsZS1iZyB7CiAgICAgICAgICBoZWlnaHQ6IDAuNjc1cmVtOwogICAgICAgICAgd2lkdGg6IDMuMDYyNXJlbTsKICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgIHRvcDogMDsKICAgICAgICAgIGxlZnQ6IDUwJTsKICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogICAgICAgICAgei1pbmRleDogMTsKICAgICAgICAgIGJhY2tncm91bmQ6IHVybCgvc3RhdGljL2ltZy9ib3hfdGl0bGVfYmcucG5nKSBuby1yZXBlYXQ7CiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTsKCiAgICAgICAgICAudGl0bGUgewogICAgICAgICAgICBoZWlnaHQ6IDAuNjc1cmVtOwogICAgICAgICAgICB3aWR0aDogMy4wNjI1cmVtOwogICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgICAgQGluY2x1ZGUgdGhlbWVpZnkgewogICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgKICAgICAgICAgICAgICAgICAgICAgIHRvIHJpZ2h0LAogICAgICAgICAgICAgICAgICAgICAgdGhlbWVkKCJjaGFydF9ib3hfbGVmdF9jb2xvciIpIDAlLAogICAgICAgICAgICAgICAgICAgICAgdGhlbWVkKCJjaGFydF9ib3hfY2VudGVyX2NvbG9yIikgNDklLAogICAgICAgICAgICAgICAgICAgICAgdGhlbWVkKCJjaGFydF9ib3hfcmlnaHRfY29sb3IiKSAxMDAlCiAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogdGV4dDsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC4zcmVtOwogICAgICAgICAgICBmb250LWZhbWlseTogTWljcm9zb2Z0IFlhSGVpIEJvbGQsIE1pY3Jvc29mdCBZYUhlaSBCb2xkLUJvbGQ7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICAvLyDlvZPml6XkvZPmo4DkurrmlbAKICAgICAgLnBlbm8tbnVtIHsKICAgICAgICAvLyBmbGV4OiAxOwogICAgICAgIGhlaWdodDogMi41cmVtOwoKICAgICAgICAud3JhcCB7CiAgICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgICAgIH0KICAgICAgfQoKICAgICAgLy8g5L2T5qOA5a6i5oi35YiG5p6QCiAgICAgIC5jdXN0b21lci1hbmFseXNpcyB7CiAgICAgICAgZmxleDogMTsKICAgICAgICBtYXJnaW4tdG9wOiAwLjZyZW07CiAgICAgICAgcGFkZGluZzogMC43MTI1cmVtIDAuMjVyZW0gMC4xMjVyZW0gMC4yNXJlbTsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGZsZXgtZmxvdzogY29sdW1uOwogICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwoKICAgICAgICAuY2hhcnQgewogICAgICAgICAgZmxleDogMTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIC8vIOaXtuauteWIhuW4gwogICAgICAudGltZS1kaXN0cmlidXRpb24gewogICAgICAgIGZsZXg6IDE7CiAgICAgIH0KCiAgICAgIC8vIOWuouaIt+WIhuW4gwogICAgICAuY3VzdG9tZXItZGlzdHJpYnV0aW9uIHsKICAgICAgICBmbGV4OiAxOwogICAgICAgIG1hcmdpbi10b3A6IDAuMnJlbTsKICAgICAgfQoKICAgICAgLy8g57G75Z6L5YiG5biDCiAgICAgIC50eXBlLWRpc3RyaWJ1dGlvbiB7CiAgICAgICAgZmxleDogMTsKICAgICAgICBtYXJnaW4tdG9wOiAwLjJyZW07CiAgICAgIH0KCiAgICAgIC8vIOS9k+ajgOaUtuWFpQogICAgICAucGVuby1pbmNvbWUgewogICAgICAgIGZsZXg6IDE7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbjsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOwoKICAgICAgICAudG90YWwtaW5jb21lIHsKICAgICAgICAgIC8vCiAgICAgICAgfQoKICAgICAgICAud3JhcCB7CiAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsKCiAgICAgICAgICAuaW5jb21lIHsKICAgICAgICAgICAgZmxleDogMTsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgZmxleC1mbG93OiBjb2x1bW47CiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CgogICAgICAgICAgICAubGFiZWwgewogICAgICAgICAgICAgIEBpbmNsdWRlIGZvbnRfY29sb3IoImluY29tZV9sYWJsZV9jb2xvciIpOwogICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC4yNXJlbTsKICAgICAgICAgICAgICBmb250LXdlaWdodDogNzAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICAubW9uZXkgewogICAgICAgICAgICAgIEBpbmNsdWRlIGZvbnRfY29sb3IoImluY29tZV9tb25leV9jb2xvciIpOwogICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC4zcmVtOwogICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIC8vIOenkeWupOW3peS9nOmHjwogICAgICAuZGVwdC13b3JrbG9hZCB7CiAgICAgICAgZmxleDogMTsKICAgICAgICBtYXJnaW4tdG9wOiAwLjJyZW07CiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKCiAgICAgICAgLnRpdGxlIHsKICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgIEBpbmNsdWRlIGZvbnRfY29sb3IoImJveF90aXRsZV9jb2xvciIpOwogICAgICAgICAgZm9udC1zaXplOiAwLjNyZW07CiAgICAgICAgICBmb250LXdlaWdodDogNzAwOwogICAgICAgIH0KICAgICAgfQoKICAgICAgLy8g6aG555uu5bel5L2c6YePCiAgICAgIC5pdGVtLXdvcmtsb2FkIHsKICAgICAgICBmbGV4OiAxOwogICAgICAgIG1hcmdpbi10b3A6IDAuMnJlbTsKICAgICAgfQogICAgfQogIH0KCiAgLy8g55S15a2Q5a2X5L2TCiAgLmVsZS1udW1iZXIgewogICAgZm9udC1zaXplOiAwLjlyZW07CiAgICBAaW5jbHVkZSBmb250X2NvbG9yKCJlbGVfY29sb3IiKTsKICAgIGZvbnQtZmFtaWx5OiBlbGVjdHJvbmljRm9udDsKICAgIGZvbnQtd2VpZ2h0OiBEaWdpdGFsLUJvbGQ7CiAgfQoKICAudW5pdCB7CiAgICBmb250LXNpemU6IDAuMjI1cmVtOwogICAgQGluY2x1ZGUgZm9udF9jb2xvcigiZWxlX3VuaXRfY29sb3IiKTsKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingskifile":"index.vue","sourceRoot":"src/views/test","sourcesContent":["<template>\n  <div class=\"data-container\">\n    <div class=\"header\">\n      智慧体检数据中心\n      <div class=\"date-time-wrap\">\n        <div class=\"time\">{{ dateObj.time }}</div>\n        <div class=\"date-wrap\">\n          <span class=\"date\">{{ dateObj.date }}</span>\n          <span class=\"week\">{{ dateObj.week }}</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"content\">\n      <div class=\"column left\">\n        <div class=\"chart-box peno-num\">\n          <div class=\"title-bg\">\n            <span class=\"title\">当日实时体检人数</span>\n          </div>\n          <div class=\"wrap\">\n            <div>\n              <span class=\"ele-number\">{{ peNum }}</span>\n              <span class=\"unit\">人</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"chart-box customer-analysis\">\n          <div class=\"title-bg\">\n            <span class=\"title\">体检客户分析</span>\n          </div>\n          <Chart v-for=\"(item, index) in pieDataList\" :key=\"index\" chart-type=\"pie\" :extra-option=\"item\">\n          </Chart>\n        </div>\n      </div>\n      <div class=\"column center\">\n        <div class=\"chart-box time-distribution\">\n          <Chart chart-type=\"line\" :extra-option=\"lineOption\"></Chart>\n        </div>\n        <div class=\"chart-box customer-distribution\">\n          <Chart chart-type=\"bar\" :extra-option=\"barOption1\"></Chart>\n        </div>\n        <div class=\"chart-box type-distribution\">\n          <Chart chart-type=\"bar\" :extra-option=\"barOption2\"></Chart>\n        </div>\n      </div>\n      <div class=\"column right\">\n        <div class=\"chart-box peno-income\">\n          <div class=\"title-bg\">\n            <span class=\"title\">体检收入</span>\n          </div>\n          <div class=\"total-income\">\n            <span class=\"ele-number\">{{ incomeData.totalMoney }}</span>\n            <span class=\"unit\">元</span>\n          </div>\n          <div class=\"wrap\">\n            <div class=\"income\">\n              <span class=\"label\">个检收入</span>\n              <span class=\"money\">{{ incomeData.peMoney }}</span>\n            </div>\n            <div class=\"income\">\n              <span class=\"label\">团检收入</span>\n              <span class=\"money\">{{ incomeData.teamMoney }}</span>\n            </div>\n            <div class=\"income\">\n              <span class=\"label\">人均金额</span>\n              <span class=\"money\">{{ incomeData.averageMoney }}</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"chart-box dept-workload\">\n          <div class=\"title\">科室工作量分布</div>\n          <AutoScrollTable :data-list=\"deptWorkload\"></AutoScrollTable>\n        </div>\n        <div class=\"chart-box item-workload\">\n          <Chart chart-type=\"bar\" :extra-option=\"barOption3\"></Chart>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Chart from \"@/views/echarts/components/chart\";\nimport AutoScrollTable from \"@/views/echarts/components/autoScrollTable\";\nimport {fontSize, parseTime} from \"@/util.js\";\nimport {getBarData, getCurrentPeNum, getDeptWorkload, getIncome, getLineData, getPieData} from \"@/api/getData\";\n\nexport default {\n  name: \"\",\n  components: {\n    Chart,\n    AutoScrollTable,\n  },\n  props: {},\n  data() {\n    return {\n      dateObj: {\n        date: \"\",\n        week: \"\",\n        time: \"\"\n      },\n      dateTimer: null,\n      peNum: 0,\n      incomeData: {\n        totalMoney: 0,\n        peMoney: 0,\n        teamMoney: 0,\n        averageMoney: 0,\n      },\n      deptWorkload: [],\n      pieDataList: [\n        {\n          color: [\"#FF7006\", \"#005AFF\"],\n          series: [\n            {\n              label: {\n                // formatter: \"客户来源\",\n              },\n              data: [\n                // { value: 400, name: \"团体\" },\n                // { value: 200, name: \"个人\" },\n              ],\n            },\n          ],\n          legend: {\n            formatter: null\n          },\n        },\n        {\n          color: [\"#03B6FF\", \"#C530FD\"],\n          series: [\n            {\n              label: {\n                // formatter: \"客户性别\",\n              },\n              data: [\n                // { value: 400, name: \"男性\" },\n                // { value: 200, name: \"女性\" },\n              ],\n            },\n          ],\n          legend: {\n            formatter: null\n          },\n        },\n        {\n          color: [\"#35D263\", \"#F19610\"],\n          series: [\n            {\n              label: {\n                // formatter: \"服务类型\",\n              },\n              data: [\n                // { value: 400, name: \"贵宾\" },\n                // { value: 200, name: \"普通\" },\n              ],\n            },\n          ],\n          legend: {\n            formatter: null\n          },\n        },\n      ],\n      lineOption: {\n        title: {\n          text: \"体检客户时段分布\",\n        },\n        legend: {\n          data: []\n          // data: [\"开始体检数\", \"结束体检数\"],\n          // width: 200\n        },\n        xAxis: {\n          data: [\"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\"],\n        },\n        series: [\n          // {\n          //   name: \"开始体检数\",\n          //   data: [120, 132, 101, 134, 90, 230, 210, 150, 200, 120],\n          // },\n          // {\n          //   name: \"结束体检数\",\n          //   data: [220, 182, 191, 234, 290, 330, 310, 230, 210, 200],\n          // },\n        ],\n      },\n      barOption1: {\n        color: [\"#01B6FF\", \"#C530FD\"],\n        title: {\n          text: \"体检区域客户分布\",\n        },\n        legend: {\n          // data: [\"男性\", \"女性\"],\n        },\n        xAxis: {\n          data: [\"一楼\", \"二楼\", \"三楼\", \"四楼\"],\n        },\n        series: [\n          // {\n          //   name: \"男性\",\n          //   data: [320, 302, 301, 334],\n          //   type: \"bar\",\n          //   label: {\n          //     show: true,\n          //     fontSize: fontSize(18),\n          //   },\n          //   emphasis: {\n          //     focus: \"series\",\n          //   },\n          //   barWidth: \"40%\",\n          //   stack: \"total\",\n          // },\n          // {\n          //   name: \"女性\",\n          //   data: [120, 132, 101, 134],\n          //   type: \"bar\",\n          //   label: {\n          //     show: true,\n          //     fontSize: fontSize(18),\n          //   },\n          //   emphasis: {\n          //     focus: \"series\",\n          //   },\n          //   barWidth: \"40%\",\n          //   stack: \"total\",\n          // },\n        ],\n      },\n      barOption2: {\n        color: [\"#F19610\", \"#01B6FF\", \"#C530FD\"],\n        title: {\n          text: \"体检类型分布\",\n        },\n        legend: {\n          // data: [\"总人数\", \"男性\", \"女性\"],\n        },\n        xAxis: {\n          type: \"value\",\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#031E77\",\n            },\n          },\n        },\n        yAxis: {\n          type: \"category\",\n          data: [\"健康体检\", \"公务员体检\", \"招工体检\", \"儿童体检\", \"合计\"],\n        },\n        series: [\n          // {\n          //   data: [100, 150, 200, 220, 670],\n          //   name: \"总人数\",\n          //   type: \"bar\",\n          //   label: {\n          //     show: true,\n          //     position: \"right\",\n          //     color: \"#0EFCFF\",\n          //     fontSize: fontSize(14),\n          //   },\n          //   emphasis: {\n          //     focus: \"series\",\n          //   },\n          //   itemStyle: {\n          //     borderRadius: [0, 50, 50, 0],\n          //   },\n          // },\n          // {\n          //   data: [30, 80, 100, 120, 330],\n          //   name: \"男性\",\n          //   type: \"bar\",\n          //   label: {\n          //     show: true,\n          //     position: \"right\",\n          //     color: \"#0EFCFF\",\n          //     fontSize: fontSize(14),\n          //   },\n          //   emphasis: {\n          //     focus: \"series\",\n          //   },\n          //   itemStyle: {\n          //     borderRadius: [0, 50, 50, 0],\n          //   },\n          // },\n          // {\n          //   data: [70, 70, 100, 100, 340],\n          //   name: \"女性\",\n          //   type: \"bar\",\n          //   label: {\n          //     show: true,\n          //     position: \"right\",\n          //     color: \"#0EFCFF\",\n          //     fontSize: fontSize(14),\n          //   },\n          //   emphasis: {\n          //     focus: \"series\",\n          //   },\n          //   itemStyle: {\n          //     borderRadius: [0, 50, 50, 0],\n          //   },\n          // },\n        ],\n      },\n      barOption3: {\n        color: [\"#01B6FF\", \"#C530FD\"],\n        title: {\n          text: \"主要体检项目工作量分布\",\n        },\n        legend: {\n          // data: [\"男性\", \"女性\"],\n        },\n        xAxis: {\n          type: \"value\",\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: \"#031E77\",\n            },\n          },\n        },\n        yAxis: {\n          type: \"category\",\n          data: [\"DR\", \"CT\", \"心脏彩超\", \"腹部超声\", \"MR\"],\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: \"#031E77\",\n            },\n          },\n          axisLabel: {\n            color: \"#fff\",\n          },\n        },\n        series: [\n          // {\n          //   data: [30, 80, 100, 120, 330],\n          //   name: \"男性\",\n          //   type: \"bar\",\n          //   stack: \"total\",\n          //   label: {\n          //     show: true,\n          //     position: \"inside\",\n          //     color: \"#fff\",\n          //     fontSize: fontSize(14),\n          //   },\n          //   emphasis: {\n          //     focus: \"series\",\n          //   },\n          //   itemStyle: {\n          //     borderRadius: 0,\n          //   },\n          //   barWidth: \"30%\",\n          // },\n          // {\n          //   data: [70, 70, 100, 100, 340],\n          //   name: \"女性\",\n          //   type: \"bar\",\n          //   stack: \"total\",\n          //   label: {\n          //     show: true,\n          //     position: \"inside\",\n          //     // color: \"#0EFCFF\",\n          //     fontSize: fontSize(14),\n          //   },\n          //   emphasis: {\n          //     focus: \"series\",\n          //   },\n          //   itemStyle: {\n          //     borderRadius: [0, 10, 10, 0],\n          //   },\n          // },\n        ],\n      },\n      dataTimer: null\n    };\n  },\n  computed: {},\n  watch: {},\n  created() {\n    this.getCurrentTime();\n    this.getAllData();\n    this.dataTimer = setInterval(() => {\n      this.getAllData();\n    }, 10 * 60 * 1000)\n  },\n  mounted() {\n    this.theme(\"dark\");\n  },\n  beforeDestroy() {\n    this.dataTimer && clearInterval(this.dataTimer)\n  },\n  methods: {\n    theme(type) {\n      window.document.documentElement.setAttribute(\"data-theme\", type);\n    },\n    // 实时获取当前时间\n    getCurrentTime() {\n      this.dateTimer && clearTimeout(this.dateTimer);\n      this.dateTimer = setTimeout(() => {\n        this.dateObj.date = parseTime(new Date(), \"{y}/{m}/{d}\");\n        this.dateObj.week = `星期${parseTime(new Date(), \"{a}\")}`;\n        this.dateObj.time = parseTime(new Date(), \"{h}:{i}:{s}\");\n        this.getCurrentTime();\n      }, 1000);\n    },\n    // 获取全部数据\n    getAllData() {\n      // 获取实时体检人数\n      getCurrentPeNum().then((res) => {\n        console.log(\"实时体检人数\", res);\n        this.peNum = res.data.peNum;\n      });\n      // 获取饼图数据\n      getPieData().then((res) => {\n        console.log(\"饼图数据\", res);\n        const pieData = res.data;\n        pieData.forEach((item, index) => {\n          this.pieDataList[index].series[0].label.formatter = item.label\n          this.pieDataList[index].series[0].data = item.list\n          this.pieDataList[index].legend.formatter = (name) => {\n            // 业务数据源\n            let data = this.pieDataList[index].series[0].data;\n            let totalVal = 0;\n            let targetVal = 0;\n            for (let i = 0; i < data.length; i++) {\n              totalVal += data[i].value;\n              if (data[i].name === name) {\n                targetVal = data[i].value;\n              }\n            }\n            let arr = [\n              `{a|${name} ${targetVal}人}`,\n              `{b|${((targetVal / totalVal) * 100).toFixed()}%}`,\n            ];\n            return arr.join(\"  \");\n          }\n        })\n      });\n      // 获取折线图数据\n      getLineData().then(res => {\n        console.log(\"折线图数据\", res);\n        const legendName = []\n        const series = []\n        res.data.forEach((item) => {\n          legendName.push(item.name)\n          series.push({\n            name: item.name,\n            data: item.data\n          })\n        })\n        this.lineOption.legend.data = legendName\n        this.lineOption.series = series\n      })\n      // 获取柱状图数据\n      getBarData().then(res => {\n        console.log(\"柱状图数据\", res);\n        // barOption1\n        let legendName = []\n        let series = []\n        res.barOption1.forEach((item) => {\n          legendName.push(item.name)\n          series.push({\n            name: item.name,\n            data: item.data,\n            type: \"bar\",\n            label: {\n              show: true,\n              fontSize: fontSize(18),\n            },\n            emphasis: {\n              focus: \"series\",\n            },\n            barWidth: \"40%\",\n            stack: \"total\"\n          })\n        })\n        this.barOption1.legend.data = legendName\n        this.barOption1.series = series\n        // barOption2\n        legendName = []\n        series = []\n        res.barOption2.forEach((item) => {\n          legendName.push(item.name)\n          series.push({\n            name: item.name,\n            data: item.data,\n            type: \"bar\",\n            label: {\n              show: true,\n              position: \"right\",\n              color: \"#0EFCFF\",\n              fontSize: fontSize(14),\n            },\n            emphasis: {\n              focus: \"series\",\n            },\n            itemStyle: {\n              borderRadius: [0, 50, 50, 0],\n            }\n          })\n        })\n        this.barOption2.legend.data = legendName\n        this.barOption2.series = series\n        // barOption3\n        legendName = []\n        series = []\n        res.barOption3.forEach((item, index) => {\n          legendName.push(item.name)\n          series.push({\n            name: item.name,\n            data: item.data,\n            type: \"bar\",\n            stack: \"total\",\n            label: {\n              show: true,\n              position: \"inside\",\n              color: \"#fff\",\n              fontSize: fontSize(14),\n            },\n            emphasis: {\n              focus: \"series\",\n            },\n            itemStyle: {\n              borderRadius: index + 1 === res.barOption3.length ? [0, 10, 10, 0] : 0,\n            },\n            barWidth: \"30%\"\n          })\n        })\n        this.barOption3.legend.data = legendName\n        this.barOption3.series = series\n      })\n      // 获取体检收入\n      getIncome().then((res) => {\n        console.log(\"实时体检收入\", res);\n        this.incomeData = res.data.incomeData;\n      });\n      // 获取科室工作量\n      getDeptWorkload().then(res => {\n        console.log(\"科室工作量\", res);\n        this.deptWorkload = res.data\n      })\n    },\n  },\n};\n</script>\n\n<style scoped lang='scss'>\n@font-face {\n  font-family: electronicFont;\n  src: url(/static/font/DS-DIGIT.TTF);\n}\n\n@import \"@/style/_handle.scss\";\n// 数据大屏容器\n.data-container {\n  height: 100%;\n  background-image: url(/static/img/bg.png);\n  background-size: contain;\n  // 头部标题\n  .header {\n    position: relative;\n    height: 1.025rem;\n    background: url(/static/img/title_bg.png) no-repeat;\n    background-size: 100% 100%;\n    box-sizing: border-box;\n    font-size: 0.45rem;\n    text-align: center;\n    @include font_color(\"title_color\");\n    line-height: 1.025rem;\n    font-weight: 700;\n    font-family: Microsoft YaHei Bold, Microsoft YaHei Bold-Bold;\n\n    // 顶部右侧时钟\n    .date-time-wrap {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 0.5625rem;\n      display: flex;\n      align-items: center;\n\n      .time {\n        height: 100%;\n        width: 1.25rem;\n        font-size: 0.3rem;\n        font-weight: 700;\n        @include font_color(\"time_color\");\n        display: flex;\n        align-items: center;\n      }\n\n      .date-wrap {\n        height: 100%;\n        display: flex;\n        flex-flow: column;\n        align-items: center;\n        font-size: 0.175rem;\n        @include font_color(\"time_color\");\n        margin: 0 0.125rem 0 0.25rem;\n\n        .date,\n        .week {\n          height: 100%;\n          line-height: 0;\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n  }\n\n  // 内容\n  .content {\n    height: calc(100vh - 1.025rem);\n    box-sizing: border-box;\n    display: flex;\n\n    .column {\n      // flex: 1;\n      box-sizing: border-box;\n      display: flex;\n      flex-flow: column;\n      margin: 0.1875rem 0.25rem;\n\n      &.left {\n        min-width: 5.3375rem;\n      }\n\n      &.center {\n        min-width: 8.125rem;\n      }\n\n      &.right {\n        min-width: 9.125rem;\n      }\n\n      // 图标盒子通用样式\n      .chart-box {\n        position: relative;\n        border-width: 1px;\n        border-style: solid;\n        @include border_color(\"chart_box_border_color\");\n        @include themeify {\n          box-shadow: 0 0 20px 0 themed(\"box_shadow_color\") inset;\n        }\n\n        // 菱形标题框样式\n        .title-bg {\n          height: 0.675rem;\n          width: 3.0625rem;\n          position: absolute;\n          top: 0;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          z-index: 1;\n          background: url(/static/img/box_title_bg.png) no-repeat;\n          background-size: 100% 100%;\n\n          .title {\n            height: 0.675rem;\n            width: 3.0625rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            @include themeify {\n              background: linear-gradient(\n                      to right,\n                      themed(\"chart_box_left_color\") 0%,\n                      themed(\"chart_box_center_color\") 49%,\n                      themed(\"chart_box_right_color\") 100%\n              );\n              -webkit-background-clip: text;\n            }\n            color: transparent;\n            font-size: 0.3rem;\n            font-family: Microsoft YaHei Bold, Microsoft YaHei Bold-Bold;\n            font-weight: 700;\n          }\n        }\n      }\n\n      // 当日体检人数\n      .peno-num {\n        // flex: 1;\n        height: 2.5rem;\n\n        .wrap {\n          height: 100%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n      }\n\n      // 体检客户分析\n      .customer-analysis {\n        flex: 1;\n        margin-top: 0.6rem;\n        padding: 0.7125rem 0.25rem 0.125rem 0.25rem;\n        display: flex;\n        flex-flow: column;\n        justify-content: space-around;\n\n        .chart {\n          flex: 1;\n        }\n      }\n\n      // 时段分布\n      .time-distribution {\n        flex: 1;\n      }\n\n      // 客户分布\n      .customer-distribution {\n        flex: 1;\n        margin-top: 0.2rem;\n      }\n\n      // 类型分布\n      .type-distribution {\n        flex: 1;\n        margin-top: 0.2rem;\n      }\n\n      // 体检收入\n      .peno-income {\n        flex: 1;\n        display: flex;\n        flex-flow: column;\n        justify-content: center;\n        align-items: center;\n\n        .total-income {\n          //\n        }\n\n        .wrap {\n          width: 100%;\n          display: flex;\n          justify-content: space-around;\n\n          .income {\n            flex: 1;\n            display: flex;\n            flex-flow: column;\n            align-items: center;\n\n            .label {\n              @include font_color(\"income_lable_color\");\n              font-size: 0.25rem;\n              font-weight: 700;\n            }\n\n            .money {\n              @include font_color(\"income_money_color\");\n              font-size: 0.3rem;\n              font-weight: 700;\n            }\n          }\n        }\n      }\n\n      // 科室工作量\n      .dept-workload {\n        flex: 1;\n        margin-top: 0.2rem;\n        overflow: hidden;\n\n        .title {\n          text-align: center;\n          @include font_color(\"box_title_color\");\n          font-size: 0.3rem;\n          font-weight: 700;\n        }\n      }\n\n      // 项目工作量\n      .item-workload {\n        flex: 1;\n        margin-top: 0.2rem;\n      }\n    }\n  }\n\n  // 电子字体\n  .ele-number {\n    font-size: 0.9rem;\n    @include font_color(\"ele_color\");\n    font-family: electronicFont;\n    font-weight: Digital-Bold;\n  }\n\n  .unit {\n    font-size: 0.225rem;\n    @include font_color(\"ele_unit_color\");\n  }\n}\n</style>\n"]}]}