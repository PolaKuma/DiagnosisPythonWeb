{"remainingRequest":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/components/CountTo/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/components/CountTo/index.vue","mtime":1700142576000},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700932421620},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1700932427812}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKaW1wb3J0IHsgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLCBjYW5jZWxBbmltYXRpb25GcmFtZSB9IGZyb20gJy4vcmVxdWVzdEFuaW1hdGlvbkZyYW1lLmpzJwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHN0YXJ0VmFsOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiAwLAogICAgfSwKICAgIGVuZFZhbDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogMjAxNywKICAgIH0sCiAgICBkdXJhdGlvbjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogMzAwMCwKICAgIH0sCiAgICBhdXRvcGxheTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6IHRydWUsCiAgICB9LAogICAgZGVjaW1hbHM6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6IDAsCiAgICAgIHZhbGlkYXRvcih2YWx1ZSkgewogICAgICAgIHJldHVybiB2YWx1ZSA+PSAwCiAgICAgIH0sCiAgICB9LAogICAgZGVjaW1hbDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogJy4nLAogICAgfSwKICAgIHNlcGFyYXRvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogJywnLAogICAgfSwKICAgIHByZWZpeDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAogICAgc3VmZml4OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiAnJywKICAgIH0sCiAgICB1c2VFYXNpbmc6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiB0cnVlLAogICAgfSwKICAgIGVhc2luZ0ZuOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0KHQsIGIsIGMsIGQpIHsKICAgICAgICByZXR1cm4gKGMgKiAoLU1hdGgucG93KDIsICgtMTAgKiB0KSAvIGQpICsgMSkgKiAxMDI0KSAvIDEwMjMgKyBiCiAgICAgIH0sCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvY2FsU3RhcnRWYWw6IHRoaXMuc3RhcnRWYWwsCiAgICAgIGRpc3BsYXlWYWx1ZTogdGhpcy5mb3JtYXROdW1iZXIodGhpcy5zdGFydFZhbCksCiAgICAgIHByaW50VmFsOiBudWxsLAogICAgICBwYXVzZWQ6IGZhbHNlLAogICAgICBsb2NhbER1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLAogICAgICBzdGFydFRpbWU6IG51bGwsCiAgICAgIHRpbWVzdGFtcDogbnVsbCwKICAgICAgcmVtYWluaW5nOiBudWxsLAogICAgICByQUY6IG51bGwsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY291bnREb3duKCkgewogICAgICByZXR1cm4gdGhpcy5zdGFydFZhbCA+IHRoaXMuZW5kVmFsCiAgICB9LAogIH0sCiAgd2F0Y2g6IHsKICAgIHN0YXJ0VmFsKCkgewogICAgICBpZiAodGhpcy5hdXRvcGxheSkgewogICAgICAgIHRoaXMuc3RhcnQoKQogICAgICB9CiAgICB9LAogICAgZW5kVmFsKCkgewogICAgICBpZiAodGhpcy5hdXRvcGxheSkgewogICAgICAgIHRoaXMuc3RhcnQoKQogICAgICB9CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLmF1dG9wbGF5KSB7CiAgICAgIHRoaXMuc3RhcnQoKQogICAgfQogICAgdGhpcy4kZW1pdCgnbW91bnRlZENhbGxiYWNrJykKICB9LAogIG1ldGhvZHM6IHsKICAgIHN0YXJ0KCkgewogICAgICB0aGlzLmxvY2FsU3RhcnRWYWwgPSB0aGlzLnN0YXJ0VmFsCiAgICAgIHRoaXMuc3RhcnRUaW1lID0gbnVsbAogICAgICB0aGlzLmxvY2FsRHVyYXRpb24gPSB0aGlzLmR1cmF0aW9uCiAgICAgIHRoaXMucGF1c2VkID0gZmFsc2UKICAgICAgdGhpcy5yQUYgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5jb3VudCkKICAgIH0sCiAgICBwYXVzZVJlc3VtZSgpIHsKICAgICAgaWYgKHRoaXMucGF1c2VkKSB7CiAgICAgICAgdGhpcy5yZXN1bWUoKQogICAgICAgIHRoaXMucGF1c2VkID0gZmFsc2UKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBhdXNlKCkKICAgICAgICB0aGlzLnBhdXNlZCA9IHRydWUKICAgICAgfQogICAgfSwKICAgIHBhdXNlKCkgewogICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnJBRikKICAgIH0sCiAgICByZXN1bWUoKSB7CiAgICAgIHRoaXMuc3RhcnRUaW1lID0gbnVsbAogICAgICB0aGlzLmxvY2FsRHVyYXRpb24gPSArdGhpcy5yZW1haW5pbmcKICAgICAgdGhpcy5sb2NhbFN0YXJ0VmFsID0gK3RoaXMucHJpbnRWYWwKICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuY291bnQpCiAgICB9LAogICAgcmVzZXQoKSB7CiAgICAgIHRoaXMuc3RhcnRUaW1lID0gbnVsbAogICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnJBRikKICAgICAgdGhpcy5kaXNwbGF5VmFsdWUgPSB0aGlzLmZvcm1hdE51bWJlcih0aGlzLnN0YXJ0VmFsKQogICAgfSwKICAgIGNvdW50KHRpbWVzdGFtcCkgewogICAgICBpZiAoIXRoaXMuc3RhcnRUaW1lKSB0aGlzLnN0YXJ0VGltZSA9IHRpbWVzdGFtcAogICAgICB0aGlzLnRpbWVzdGFtcCA9IHRpbWVzdGFtcAogICAgICBjb25zdCBwcm9ncmVzcyA9IHRpbWVzdGFtcCAtIHRoaXMuc3RhcnRUaW1lCiAgICAgIHRoaXMucmVtYWluaW5nID0gdGhpcy5sb2NhbER1cmF0aW9uIC0gcHJvZ3Jlc3MKCiAgICAgIGlmICh0aGlzLnVzZUVhc2luZykgewogICAgICAgIGlmICh0aGlzLmNvdW50RG93bikgewogICAgICAgICAgdGhpcy5wcmludFZhbCA9CiAgICAgICAgICAgIHRoaXMubG9jYWxTdGFydFZhbCAtCiAgICAgICAgICAgIHRoaXMuZWFzaW5nRm4ocHJvZ3Jlc3MsIDAsIHRoaXMubG9jYWxTdGFydFZhbCAtIHRoaXMuZW5kVmFsLCB0aGlzLmxvY2FsRHVyYXRpb24pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMucHJpbnRWYWwgPSB0aGlzLmVhc2luZ0ZuKAogICAgICAgICAgICBwcm9ncmVzcywKICAgICAgICAgICAgdGhpcy5sb2NhbFN0YXJ0VmFsLAogICAgICAgICAgICB0aGlzLmVuZFZhbCAtIHRoaXMubG9jYWxTdGFydFZhbCwKICAgICAgICAgICAgdGhpcy5sb2NhbER1cmF0aW9uLAogICAgICAgICAgKQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodGhpcy5jb3VudERvd24pIHsKICAgICAgICAgIHRoaXMucHJpbnRWYWwgPQogICAgICAgICAgICB0aGlzLmxvY2FsU3RhcnRWYWwgLQogICAgICAgICAgICAodGhpcy5sb2NhbFN0YXJ0VmFsIC0gdGhpcy5lbmRWYWwpICogKHByb2dyZXNzIC8gdGhpcy5sb2NhbER1cmF0aW9uKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnByaW50VmFsID0KICAgICAgICAgICAgdGhpcy5sb2NhbFN0YXJ0VmFsICsKICAgICAgICAgICAgKHRoaXMuZW5kVmFsIC0gdGhpcy5sb2NhbFN0YXJ0VmFsKSAqIChwcm9ncmVzcyAvIHRoaXMubG9jYWxEdXJhdGlvbikKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYgKHRoaXMuY291bnREb3duKSB7CiAgICAgICAgdGhpcy5wcmludFZhbCA9IHRoaXMucHJpbnRWYWwgPCB0aGlzLmVuZFZhbCA/IHRoaXMuZW5kVmFsIDogdGhpcy5wcmludFZhbAogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucHJpbnRWYWwgPSB0aGlzLnByaW50VmFsID4gdGhpcy5lbmRWYWwgPyB0aGlzLmVuZFZhbCA6IHRoaXMucHJpbnRWYWwKICAgICAgfQoKICAgICAgdGhpcy5kaXNwbGF5VmFsdWUgPSB0aGlzLmZvcm1hdE51bWJlcih0aGlzLnByaW50VmFsKQogICAgICBpZiAocHJvZ3Jlc3MgPCB0aGlzLmxvY2FsRHVyYXRpb24pIHsKICAgICAgICB0aGlzLnJBRiA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmNvdW50KQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJGVtaXQoJ2NhbGxiYWNrJykKICAgICAgfQogICAgfSwKICAgIGlzTnVtYmVyKHZhbCkgewogICAgICByZXR1cm4gIWlzTmFOKHBhcnNlRmxvYXQodmFsKSkKICAgIH0sCiAgICBmb3JtYXROdW1iZXIobnVtKSB7CiAgICAgIG51bSA9IG51bS50b0ZpeGVkKHRoaXMuZGVjaW1hbHMpCiAgICAgIG51bSArPSAnJwogICAgICBjb25zdCB4ID0gbnVtLnNwbGl0KCcuJykKICAgICAgbGV0IHgxID0geFswXQogICAgICBjb25zdCB4MiA9IHgubGVuZ3RoID4gMSA/IHRoaXMuZGVjaW1hbCArIHhbMV0gOiAnJwogICAgICBjb25zdCByZ3ggPSAvKFxkKykoXGR7M30pLwogICAgICBpZiAodGhpcy5zZXBhcmF0b3IgJiYgIXRoaXMuaXNOdW1iZXIodGhpcy5zZXBhcmF0b3IpKSB7CiAgICAgICAgd2hpbGUgKHJneC50ZXN0KHgxKSkgewogICAgICAgICAgeDEgPSB4MS5yZXBsYWNlKHJneCwgJyQxJyArIHRoaXMuc2VwYXJhdG9yICsgJyQyJykKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMucHJlZml4ICsgeDEgKyB4MiArIHRoaXMuc3VmZml4CiAgICB9LAogIH0sCiAgZGVzdHJveWVkKCkgewogICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5yQUYpCiAgfSwKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/components/CountTo","sourcesContent":["<template>\n  <span>\n    {{ displayValue }}\n  </span>\n</template>\n<script lang=\"ts\">\n  import { requestAnimationFrame, cancelAnimationFrame } from './requestAnimationFrame.js'\n  export default {\n    props: {\n      startVal: {\n        type: Number,\n        required: false,\n        default: 0,\n      },\n      endVal: {\n        type: Number,\n        required: false,\n        default: 2017,\n      },\n      duration: {\n        type: Number,\n        required: false,\n        default: 3000,\n      },\n      autoplay: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      decimals: {\n        type: Number,\n        required: false,\n        default: 0,\n        validator(value) {\n          return value >= 0\n        },\n      },\n      decimal: {\n        type: String,\n        required: false,\n        default: '.',\n      },\n      separator: {\n        type: String,\n        required: false,\n        default: ',',\n      },\n      prefix: {\n        type: String,\n        required: false,\n        default: '',\n      },\n      suffix: {\n        type: String,\n        required: false,\n        default: '',\n      },\n      useEasing: {\n        type: Boolean,\n        required: false,\n        default: true,\n      },\n      easingFn: {\n        type: Function,\n        default(t, b, c, d) {\n          return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b\n        },\n      },\n    },\n    data() {\n      return {\n        localStartVal: this.startVal,\n        displayValue: this.formatNumber(this.startVal),\n        printVal: null,\n        paused: false,\n        localDuration: this.duration,\n        startTime: null,\n        timestamp: null,\n        remaining: null,\n        rAF: null,\n      }\n    },\n    computed: {\n      countDown() {\n        return this.startVal > this.endVal\n      },\n    },\n    watch: {\n      startVal() {\n        if (this.autoplay) {\n          this.start()\n        }\n      },\n      endVal() {\n        if (this.autoplay) {\n          this.start()\n        }\n      },\n    },\n    mounted() {\n      if (this.autoplay) {\n        this.start()\n      }\n      this.$emit('mountedCallback')\n    },\n    methods: {\n      start() {\n        this.localStartVal = this.startVal\n        this.startTime = null\n        this.localDuration = this.duration\n        this.paused = false\n        this.rAF = requestAnimationFrame(this.count)\n      },\n      pauseResume() {\n        if (this.paused) {\n          this.resume()\n          this.paused = false\n        } else {\n          this.pause()\n          this.paused = true\n        }\n      },\n      pause() {\n        cancelAnimationFrame(this.rAF)\n      },\n      resume() {\n        this.startTime = null\n        this.localDuration = +this.remaining\n        this.localStartVal = +this.printVal\n        requestAnimationFrame(this.count)\n      },\n      reset() {\n        this.startTime = null\n        cancelAnimationFrame(this.rAF)\n        this.displayValue = this.formatNumber(this.startVal)\n      },\n      count(timestamp) {\n        if (!this.startTime) this.startTime = timestamp\n        this.timestamp = timestamp\n        const progress = timestamp - this.startTime\n        this.remaining = this.localDuration - progress\n\n        if (this.useEasing) {\n          if (this.countDown) {\n            this.printVal =\n              this.localStartVal -\n              this.easingFn(progress, 0, this.localStartVal - this.endVal, this.localDuration)\n          } else {\n            this.printVal = this.easingFn(\n              progress,\n              this.localStartVal,\n              this.endVal - this.localStartVal,\n              this.localDuration,\n            )\n          }\n        } else {\n          if (this.countDown) {\n            this.printVal =\n              this.localStartVal -\n              (this.localStartVal - this.endVal) * (progress / this.localDuration)\n          } else {\n            this.printVal =\n              this.localStartVal +\n              (this.endVal - this.localStartVal) * (progress / this.localDuration)\n          }\n        }\n        if (this.countDown) {\n          this.printVal = this.printVal < this.endVal ? this.endVal : this.printVal\n        } else {\n          this.printVal = this.printVal > this.endVal ? this.endVal : this.printVal\n        }\n\n        this.displayValue = this.formatNumber(this.printVal)\n        if (progress < this.localDuration) {\n          this.rAF = requestAnimationFrame(this.count)\n        } else {\n          this.$emit('callback')\n        }\n      },\n      isNumber(val) {\n        return !isNaN(parseFloat(val))\n      },\n      formatNumber(num) {\n        num = num.toFixed(this.decimals)\n        num += ''\n        const x = num.split('.')\n        let x1 = x[0]\n        const x2 = x.length > 1 ? this.decimal + x[1] : ''\n        const rgx = /(\\d+)(\\d{3})/\n        if (this.separator && !this.isNumber(this.separator)) {\n          while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + this.separator + '$2')\n          }\n        }\n        return this.prefix + x1 + x2 + this.suffix\n      },\n    },\n    destroyed() {\n      cancelAnimationFrame(this.rAF)\n    },\n  }\n</script>\n"]}]}