{"remainingRequest":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/patientManage/diagnosis.vue?vue&type=style&index=0&id=419074c2&scoped=true&lang=css&","dependencies":[{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/patientManage/diagnosis.vue","mtime":1702259514837},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/css-loader/dist/cjs.js","mtime":1702214741993},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1702214744817},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/postcss-loader/src/index.js","mtime":1702214743077},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1702214739870},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1702214743778}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hbGx7CiAgYm94LXNoYWRvdzogMCAxNXB4IDMwcHggcmdiYSgwLDAsMCwuMyk7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKfQo="},{"version":3,"sources":["diagnosis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA","file":"diagnosis.vue","sourceRoot":"src/views/patientManage","sourcesContent":["<template>\n  <div>\n    <el-table :header-cell-style=\"{background:'#f5f7fa',color:'#606266'}\" class=\"all\" :data=\"tableData\" v-loading=\"loading\" style=\"width: 100%\">\n      <el-table-column type=\"index\" label=\"序号\" align=\"center\" width=\"70\"/>\n      <el-table-column prop=\"patientName\" label=\"患者姓名\" align=\"center\" width=\"300\"/>\n      <el-table-column prop=\"doctorname\" label=\"诊治医师\" align=\"center\" width=\"300\"/>\n      <el-table-column prop=\"diagnosisTime\" label=\"处理时间\" align=\"center\" width=\"300\"/>\n      <el-table-column label=\"完成状态\" align=\"center\" width=\"300\">\n        <template v-slot=\"{row}\">\n          <a v-if=\"row.returntime\">{{ row.returntime }}</a>\n          <el-tag size=\"mini\" v-else type=\"danger\">\n            处理中\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" width=\"300px\" fixed=\"right\">\n        <template v-slot=\"{row}\">\n          <el-button type=\"success\" v-if=\"!row.returntime\" @click=\"returnbook(row)\" size='mini'>完成</el-button>\n          <el-button type=\"primary\" v-if=\"!row.returntime\" @click=\"generateReport(row)\" size=\"mini\">报告生成</el-button>\n          <el-button type=\"info\" v-if=\"!row.returntime\" @click=\"showForm(row)\" size=\"mini\">编辑报告</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      background\n      style=\"margin-top: 20px;text-align: center\"\n      :current-page=\"pageNum\"\n      :page-size=\"pageSize\"\n      :total=\"total\"\n      :pager-count=\"10\"\n      :page-sizes=\"[10,15,30]\"\n      layout=\"prev,pager,next,jumper,->,sizes,total\"\n      @current-change=\"getPatientList\"\n      @size-change=\"handleSizeChange\"\n    />\n\n    <el-dialog :title=\"'请书写报告内容'\" :visible.sync=\"dialogFormVisible\">\n      <el-form model=\"form\">\n        <el-form-item label=\"报告\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.report\" type=\"textarea\" :rows=\"15\" style=\"width: 300px;\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"onForm\">确定</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"diagnosis\",\n\n  data() {\n    return {\n      form: {\n        id: '',\n        report: ''\n      },\n      dialogFormVisible: false,\n      tableData: [],\n      loading: false,\n      pageNum: 1,\n      pageSize: 10,\n      total: 0\n    }\n  },\n  mounted() {\n    this.getPatientList(1)\n  },\n  methods: {\n    async getPatientList(pager = 1) {\n      this.loading = true\n      this.pageNum = pager\n      const { pageNum, pageSize } = this // 发送请求时候需要带参数\n      const res = await this.$API.patient.reqDiagnosis(pageNum, pageSize)\n      if (res.code === 200) {\n        this.tableData = res.msg\n        this.total = res.total\n        this.loading = false\n      }\n    },\n    handleSizeChange(limit) {\n      this.pageSize = limit\n      this.getPatientList(1)\n    },\n    async generateReport(row) {\n      const patientid = row.patientid\n      const diagnosisTime = row.diagnosisTime\n      const host = window.location.origin\n      const targetPath = `${host}/chatHome#/chatHome?patientid=${patientid}&diagnosisTime=${diagnosisTime}`\n      window.open(targetPath, '_blank')\n    },\n    showForm(row) {\n      this.dialogFormVisible = true\n      this.form = {\n        id: row.patientid,\n        report: ''\n      }\n    },\n    async onForm() {\n      const res = await this.$API.patient.reqSaveAndUpdatePatients(this.form)\n      if (res.code === 200) {\n        // 关闭表单\n        this.dialogFormVisible = false\n        // 消息提示\n        this.$message({\n          message: '修改成功!',\n          type: 'success'\n        })\n      }\n    },\n    async returnbook(row) {\n      this.$confirm(`你确定诊断 ${row.patientName} 吗?`, '删除', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async() => {\n        const result = await this.$API.patient.returnPatient(row.diagnosisTime)\n        if (result.code === 200) {\n          this.$notify({ type: 'success', message: row.patientName + ' 诊断完成' },\n          )\n          await this.getPatientList(this.pageNum)\n        }\n      }).catch(() => {\n        this.$notify({\n          type: 'info',\n          message: '已取消'\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.all{\n  box-shadow: 0 15px 30px rgba(0,0,0,.3);\n  border-radius: 10px;\n}\n</style>\n"]}]}