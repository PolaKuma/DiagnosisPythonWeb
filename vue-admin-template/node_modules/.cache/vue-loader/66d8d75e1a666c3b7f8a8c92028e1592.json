{"remainingRequest":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/test/index.vue?vue&type=template&id=f3a85fa2&","dependencies":[{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/test/index.vue","mtime":1702053094953},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700932421620},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1700932427812},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700932421620},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1700932427812}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}