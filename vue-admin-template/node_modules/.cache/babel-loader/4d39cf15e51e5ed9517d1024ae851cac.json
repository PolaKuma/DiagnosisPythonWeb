{"remainingRequest":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/@jiaminghi/data-view/lib/components/decoration2/src/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/@jiaminghi/data-view/lib/components/decoration2/src/main.vue","mtime":1702053848262},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/babel.config.js","mtime":1700932419779},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700932421620},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":1700932421115},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700932421620},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1700932427812}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2RGVjb3JhdGlvbjInLAogIG1peGluczogW2F1dG9SZXNpemVdLAogIHByb3BzOiB7CiAgICBjb2xvcjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAgcmV2ZXJzZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGR1cjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDYKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZWY6ICdkZWNvcmF0aW9uLTInLAogICAgICB4OiAwLAogICAgICB5OiAwLAogICAgICB3OiAwLAogICAgICBoOiAwLAogICAgICBkZWZhdWx0Q29sb3I6IFsnIzNmYWFjYicsICcjZmZmJ10sCiAgICAgIG1lcmdlZENvbG9yOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb2xvcjogZnVuY3Rpb24gY29sb3IoKSB7CiAgICAgIHZhciBtZXJnZUNvbG9yID0gdGhpcy5tZXJnZUNvbG9yOwogICAgICBtZXJnZUNvbG9yKCk7CiAgICB9LAogICAgcmV2ZXJzZTogZnVuY3Rpb24gcmV2ZXJzZSgpIHsKICAgICAgdmFyIGNhbGNTVkdEYXRhID0gdGhpcy5jYWxjU1ZHRGF0YTsKICAgICAgY2FsY1NWR0RhdGEoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFmdGVyQXV0b1Jlc2l6ZU1peGluSW5pdDogZnVuY3Rpb24gYWZ0ZXJBdXRvUmVzaXplTWl4aW5Jbml0KCkgewogICAgICB2YXIgY2FsY1NWR0RhdGEgPSB0aGlzLmNhbGNTVkdEYXRhOwogICAgICBjYWxjU1ZHRGF0YSgpOwogICAgfSwKICAgIGNhbGNTVkdEYXRhOiBmdW5jdGlvbiBjYWxjU1ZHRGF0YSgpIHsKICAgICAgdmFyIHJldmVyc2UgPSB0aGlzLnJldmVyc2UsCiAgICAgICAgICB3aWR0aCA9IHRoaXMud2lkdGgsCiAgICAgICAgICBoZWlnaHQgPSB0aGlzLmhlaWdodDsKCiAgICAgIGlmIChyZXZlcnNlKSB7CiAgICAgICAgdGhpcy53ID0gMTsKICAgICAgICB0aGlzLmggPSBoZWlnaHQ7CiAgICAgICAgdGhpcy54ID0gd2lkdGggLyAyOwogICAgICAgIHRoaXMueSA9IDA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy53ID0gd2lkdGg7CiAgICAgICAgdGhpcy5oID0gMTsKICAgICAgICB0aGlzLnggPSAwOwogICAgICAgIHRoaXMueSA9IGhlaWdodCAvIDI7CiAgICAgIH0KICAgIH0sCiAgICBvblJlc2l6ZTogZnVuY3Rpb24gb25SZXNpemUoKSB7CiAgICAgIHZhciBjYWxjU1ZHRGF0YSA9IHRoaXMuY2FsY1NWR0RhdGE7CiAgICAgIGNhbGNTVkdEYXRhKCk7CiAgICB9LAogICAgbWVyZ2VDb2xvcjogZnVuY3Rpb24gbWVyZ2VDb2xvcigpIHsKICAgICAgdmFyIGNvbG9yID0gdGhpcy5jb2xvciwKICAgICAgICAgIGRlZmF1bHRDb2xvciA9IHRoaXMuZGVmYXVsdENvbG9yOwogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIG1lcmdlQ29sb3IgPSB0aGlzLm1lcmdlQ29sb3I7CiAgICBtZXJnZUNvbG9yKCk7CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AAEA;AAEA;AAEA;EACAA,qBADA;EAEAC,oBAFA;EAGAC;IACAC;MACAC,WADA;MAEAC;QAAA;MAAA;IAFA,CADA;IAKAC;MACAF,aADA;MAEAC;IAFA,CALA;IASAE;MACAH,YADA;MAEAC;IAFA;EATA,CAHA;EAiBAG,IAjBA,kBAiBA;IACA;MACAC,mBADA;MAGAC,IAHA;MAIAC,IAJA;MAMAC,IANA;MAOAC,IAPA;MASAC,iCATA;MAWAC;IAXA;EAaA,CA/BA;EAgCAC;IACAb,KADA,mBACA;MACA;MAEAc;IACA,CALA;IAMAX,OANA,qBAMA;MACA;MAEAY;IACA;EAVA,CAhCA;EA4CAC;IACAC,wBADA,sCACA;MACA;MAEAF;IACA,CALA;IAMAA,WANA,yBAMA;MACA;MAAA;MAAA;;MAEA;QACA;QACA;QACA;QACA;MACA,CALA,MAKA;QACA;QACA;QACA;QACA;MACA;IACA,CApBA;IAqBAG,QArBA,sBAqBA;MACA;MAEAH;IACA,CAzBA;IA0BAD,UA1BA,wBA0BA;MACA;MAAA;MAEA;IACA;EA9BA,CA5CA;EA4EAK,OA5EA,qBA4EA;IACA;IAEAL;EACA;AAhFA","names":["name","mixins","props","color","type","default","reverse","dur","data","ref","x","y","w","h","defaultColor","mergedColor","watch","mergeColor","calcSVGData","methods","afterAutoResizeMixinInit","onResize","mounted"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration2/src","sources":["main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-decoration-2\" :ref=\"ref\">\n    <svg :width=\"`${width}px`\" :height=\"`${height}px`\">\n      <rect :x=\"x\" :y=\"y\" :width=\"w\" :height=\"h\" :fill=\"mergedColor[0]\">\n        <animate\n          :attributeName=\"reverse ? 'height' : 'width'\"\n          from=\"0\"\n          :to=\"reverse ? height : width\"\n          :dur=\"`${dur}s`\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\".42,0,.58,1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n\n      <rect :x=\"x\" :y=\"y\" width=\"1\" height=\"1\" :fill=\"mergedColor[1]\">\n        <animate\n          :attributeName=\"reverse ? 'y' : 'x'\"\n          from=\"0\"\n          :to=\"reverse ? height : width\"\n          :dur=\"`${dur}s`\"\n          calcMode=\"spline\"\n          keyTimes=\"0;1\"\n          keySplines=\"0.42,0,0.58,1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration2',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    },\n    dur: {\n      type: Number,\n      default: 6\n    }\n  },\n  data () {\n    return {\n      ref: 'decoration-2',\n\n      x: 0,\n      y: 0,\n\n      w: 0,\n      h: 0,\n\n      defaultColor: ['#3faacb', '#fff'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    },\n    reverse () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { reverse, width, height } = this\n\n      if (reverse) {\n        this.w = 1\n        this.h = height\n        this.x = width / 2\n        this.y = 0\n      } else {\n        this.w = width\n        this.h = 1\n        this.x = 0\n        this.y = height / 2\n      }\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"]}]}