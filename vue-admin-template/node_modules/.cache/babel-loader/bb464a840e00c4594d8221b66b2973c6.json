{"remainingRequest":"/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/src/views/bookManage/book.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/src/views/bookManage/book.vue","mtime":1699799539837},{"path":"/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/babel.config.js","mtime":1655377918000},{"path":"/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1699434136645},{"path":"/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":1699434137950},{"path":"/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1699434136645},{"path":"/Users/junjie/Desktop/BooksPythonWeb-master/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1699434138342}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","computed","mapGetters","data","tableData","dialogFormVisible","form","bookname","type","isbn","author","press","time","formLabelWidth","pageSize","pageNum","total","key","value","loading","uploadDialogFormVisible","downloadExcel","mounted","methods","getBookList","pager","res","showForm","row","onForm","message","deleted","confirmButtonText","cancelButtonText","then","result","$notify","catch","onState","handleSizeChange","limit","readBook","handleAvatarSuccess","response","file","fileList"],"sourceRoot":"src/views/bookManage","sources":["book.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <div style=\"text-align: center\">\n        <el-select v-model=\"key\" style=\"width: 100px\" placeholder=\"请选择\">\n          <el-option label=\"书名\" value=\"bookname\"></el-option>\n          <el-option label=\"作者\" value=\"author\"></el-option>\n          <el-option label=\"分类\" value=\"type\"></el-option>\n          <el-option label=\"ISBN\" value=\"isbn\"></el-option>\n        </el-select>\n        <el-input v-model=\"value\" autocomplete=\"off\" style=\"width: 500px; margin: 20px\"></el-input>\n        <!--        <el-autocomplete-->\n        <!--          v-model=\"state\"-->\n        <!--          :fetch-suggestions=\"querySearchAsync\"-->\n        <!--          placeholder=\"请输入内容\"-->\n        <!--          @select=\"handleSelect\"-->\n        <!--          style=\"width: 500px; margin: 20px \">-->\n        <!--          <template v-slot=\"{ item }\">-->\n        <!--            <div>{{ item.drugName }}</div>-->\n        <!--          </template>-->\n        <!--        </el-autocomplete>-->\n        <el-button type=\"primary\" @click=\"onState\">搜素</el-button>\n      </div>\n\n      <el-button type=\"primary\" v-show=\"usertype===1\" @click=\"showForm\">添加书籍</el-button>\n      <el-button type=\"primary\" v-show=\"usertype===1\" @click=\"uploadDialogFormVisible = true\">Excel 批量添加</el-button>\n      <!--        <el-button type=\"primary\" icon=\"el-icon-plus\">添加</el-button>-->\n\n      <el-dialog :title=\"form.id ? '修改图书':'新增图书'\" width=\"19.4%\" :visible.sync=\"uploadDialogFormVisible\">\n        <el-upload\n          class=\"upload-demo\"\n          drag\n          :on-success=\"handleAvatarSuccess\"\n          action=\"http://localhost/dev-api/api/upload\"\n          multiple>\n          <i class=\"el-icon-upload\"></i>\n          <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n          <div class=\"el-upload__tip\" slot=\"tip\">只能上传xlx\\xlxs文件</div>\n        </el-upload>\n        <el-link type=\"success\"\n                 href=\"http://rcq7r03jb.hb-bkt.clouddn.com/python/%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E5%9B%BE%E4%B9%A6-%E6%A8%A1%E6%9D%BF.xlsx\">\n          下载Excel模板\n        </el-link>\n      </el-dialog>\n\n    </div>\n    <el-table :data=\"tableData\" v-loading=\"loading\" style=\"width: 100%\">\n      <el-table-column type=\"index\" label=\"序号\" align=\"center\" width=\"70\"/>\n      <el-table-column label=\"书名\" width=\"100\" align=\"center\">\n        <template v-slot=\"row\">\n          <img style=\"width: 100px;text-align: center\"\n               src=\"https://book.zhishikoo.com/wp-content/uploads/2022/04/10003661.jpg\" alt=\"\">\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"bookname\" label=\"封面\" align=\"center\" width=\"300\"/>\n      <el-table-column prop=\"author\" label=\"作者\" align=\"center\"/>\n      <el-table-column prop=\"type\" label=\"分类\" align=\"center\" width=\"180\"/>\n      <el-table-column prop=\"press\" label=\"出版社\" align=\"center\" width=\"180\"/>\n      <el-table-column prop=\"time\" label=\"出版时间\" align=\"center\" width=\"180\"/>\n      <el-table-column prop=\"isbn\" label=\"ISBN\" align=\"center\" width=\"180\"/>\n      <el-table-column label=\"操作\" align=\"center\">\n        <template v-slot=\"{row}\">\n          <el-button type=\"success\" @click=\"readBook(row)\" size='mini'>借阅</el-button>\n          <el-button type=\"primary\" @click=\"showForm(row)\" v-show=\"usertype===1\" size='mini'>编辑</el-button>\n          <el-button type=\"danger\" @click=\"deleted(row)\" v-show=\"usertype===1\" size='mini'>删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      background\n      style=\"margin-top: 20px;text-align: center\"\n      :current-page=\"pageNum\"\n      :page-size=\"pageSize\"\n      :total=\"total\"\n      :pager-count=\"5\"\n      :page-sizes=\"[5,15,30]\"\n      layout=\"prev,pager,next,jumper,->,sizes,total\"\n      @current-change=\"getBookList\"\n      @size-change=\"handleSizeChange\"\n    />\n\n    <el-dialog :title=\"form.id ? '修改图书':'新增图书'\" :visible.sync=\"dialogFormVisible\">\n      <el-form :model=\"form\">\n        <el-form-item label=\"书名\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.bookname\" autocomplete=\"off\" style=\"width: 300px;\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"作者\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.author\" autocomplete=\"off\" style=\"width: 300px;\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"分类\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.type\" autocomplete=\"off\" style=\"width: 300px;\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"出版社\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.press\" autocomplete=\"off\" style=\"width: 300px;\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"出版时间\" :label-width=\"formLabelWidth\">\n          <el-date-picker v-model=\"form.time\" value-format=\"yyyy年MM月\" format=\"\" type=\"month\" placeholder=\"选择日期\"/>\n        </el-form-item>\n        <el-form-item label=\"ISBN\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.isbn\" autocomplete=\"off\" style=\"width: 300px;\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"onForm\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n\n</template>\n\n<script>\n\n\nimport {mapGetters} from \"vuex\";\n\nexport default {\n  name: \"book\",\n  computed: {\n    ...mapGetters([\n      'usertype',\n    ])\n  },\n  data() {\n    return {\n      tableData: [],\n      dialogFormVisible: false,\n      form: {\n        bookname: '',\n        type: '',\n        isbn: '',\n        author: '',\n        press: '',\n        time: '',\n      },\n      formLabelWidth: '120px',\n      pageSize: 5,\n      pageNum: 1,\n      total: 0,\n      key: 'bookname',\n      value: '',\n      loading: false,\n      uploadDialogFormVisible: false,\n      downloadExcel: ''\n    }\n  },\n  mounted() {\n    this.getBookList()\n  },\n  methods: {\n    async getBookList(pager = 1) {\n      this.loading = true\n      this.pageNum = pager\n      const {pageNum, pageSize} = this // 发送请求时候需要带参数\n      const res = await this.$API.book.reqBooks(pageNum, pageSize, this.key, this.value)\n      if (res.code === 200) {\n        this.tableData = res.msg\n        this.total = res.total\n        this.loading = false\n      }\n    },\n    showForm(row) {\n      this.dialogFormVisible = true\n      this.form = {...row}\n    },\n    async onForm() {\n      const res = await this.$API.book.reqSaveAndUpdateBooks(this.form)\n      if (res.code === 200) {\n        // 关闭表单\n        this.dialogFormVisible = false\n        // 消息提示\n        this.$message({\n          message: '修改成功!',\n          type: 'success'\n        });\n        await this.getBookList()\n      }\n    },\n    deleted(row) {\n      this.$confirm(`你确定删除 《${row.bookname}》 吗?`, '删除', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        const result = await this.$API.book.delBooks(row.id)\n        if (result.code === 200) {\n          this.$notify({\n              type: 'success',\n              message: '删除成功!'\n            },\n            await this.getBookList()\n          )\n        } else {\n          this.$notify({\n            type: 'warning',\n            message: '删除失败,请联系系统运维!'\n          })\n        }\n      }).catch(() => {\n        this.$notify({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    },\n    onState() {\n      this.getBookList()\n    },\n    handleSizeChange(limit) {\n      this.pageSize = limit\n      this.getUserList()\n    },\n    async readBook(row) {\n\n      const data = {\n        'bookid': row.id,\n        'bookname': row.bookname\n      }\n      this.$confirm(`你确定借阅 《${row.bookname}》 吗?`, '删除', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        const result = await this.$API.book.readBook(data)\n        if (result.code === 200) {\n          this.$notify({\n              type: 'success',\n              message: '《' + row.bookname + '》 借阅成功！请到借阅管理中查看'\n            },\n          )\n        }\n      }).catch(() => {\n        this.$notify({\n          type: 'info',\n          message: '已取消'\n        })\n      })\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      this.$notify({\n          type: 'success',\n          message: '批量添加成功!'\n        },\n        this.getBookList(1)\n      )\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}