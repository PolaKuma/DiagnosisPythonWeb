{"remainingRequest":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/pages/chatHome/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/src/views/pages/chatHome/index.vue","mtime":1700845512720},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/babel.config.js","mtime":1700733288000},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700733288000},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":1700733288000},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1700733288000},{"path":"/Users/junjie/Documents/GitHub/Untitled/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1700733288000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBlcnNvbkNhcmQgZnJvbSAnQC9jb21wb25lbnRzL1BlcnNvbkNhcmQudnVlJzsKaW1wb3J0IENoYXRXaW5kb3cgZnJvbSAnLi9jaGF0d2luZG93LnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjb21wb25lbnRzOiB7CiAgICBQZXJzb25DYXJkOiBQZXJzb25DYXJkLAogICAgQ2hhdFdpbmRvdzogQ2hhdFdpbmRvdwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBjQ3VycmVudDogJycsCiAgICAgIHBlcnNvbkxpc3Q6IFtdLAogICAgICBzaG93Q2hhdFdpbmRvdzogZmFsc2UsCiAgICAgIGNoYXRXaW5kb3dJbmZvOiB7fQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnBlcnNvbkxpc3QgPSBbewogICAgICBpbWc6ICcnLAogICAgICBuYW1lOiAn5Yek6ZuPJywKICAgICAgZGV0YWlsOiAnV2VsY29tZSBDaGF0JywKICAgICAgbGFzdE1zZzogJ3RvIGRvJywKICAgICAgaWQ6ICcxMDAyJywKICAgICAgaGVhZEltZzogcmVxdWlyZSgnQC9hc3NldHMvaW1nL2hlYWRfcG9ydHJhaXQxLmpwZycpCiAgICB9XTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNsaWNrUGVyc29uOiBmdW5jdGlvbiBjbGlja1BlcnNvbihpbmZvKSB7CiAgICAgIHRoaXMuc2hvd0NoYXRXaW5kb3cgPSB0cnVlOwogICAgICB0aGlzLmNoYXRXaW5kb3dJbmZvID0gaW5mbzsKICAgICAgdGhpcy5wZXJzb25JbmZvID0gaW5mbzsKICAgICAgdGhpcy5wY0N1cnJlbnQgPSBpbmZvLmlkOwogICAgfSwKICAgIHBlcnNvbkNhcmRTb3J0OiBmdW5jdGlvbiBwZXJzb25DYXJkU29ydChpZCkgewogICAgICBpZiAoaWQgIT09IHRoaXMucGVyc29uTGlzdFswXS5pZCkgewogICAgICAgIGNvbnNvbGUubG9nKGlkKTsKICAgICAgICB2YXIgbm93UGVyc29uSW5mbzsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnBlcnNvbkxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmICh0aGlzLnBlcnNvbkxpc3RbaV0uaWQgPT09IGlkKSB7CiAgICAgICAgICAgIG5vd1BlcnNvbkluZm8gPSB0aGlzLnBlcnNvbkxpc3RbaV07CiAgICAgICAgICAgIHRoaXMucGVyc29uTGlzdC5zcGxpY2UoaSwgMSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdGhpcy5wZXJzb25MaXN0LnVuc2hpZnQobm93UGVyc29uSW5mbyk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AAEA;EACAA,WADA;EAEAC;IACAC,sBADA;IAEAC;EAFA,CAFA;EAMAC,IANA,kBAMA;IACA;MACAC,aADA;MAEAC,cAFA;MAGAC,qBAHA;MAIAC;IAJA;EAMA,CAbA;EAcAC,OAdA,qBAcA;IACA,mBACA;MACAC,OADA;MAEAV,UAFA;MAGAW,sBAHA;MAIAC,gBAJA;MAKAC,UALA;MAMAC;IANA,CADA;EASA,CAxBA;EAyBAC;IACAC,WADA,uBACAC,IADA,EACA;MACA;MACA;MACA;MACA;IACA,CANA;IAOAC,cAPA,0BAOAL,EAPA,EAOA;MACA;QACAM;QACA;;QACA;UACA;YACAC;YACA;YACA;UACA;QACA;;QACA;MACA;IACA;EApBA;AAzBA","names":["name","components","PersonCard","ChatWindow","data","pcCurrent","personList","showChatWindow","chatWindowInfo","mounted","img","detail","lastMsg","id","headImg","methods","clickPerson","info","personCardSort","console","nowPersonInfo"],"sourceRoot":"src/views/pages/chatHome","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"chatHome\">\n    <div class=\"chatLeft\">\n      <div class=\"title\">\n        <h1>Chat-Med</h1>\n        <el-tag type=\"success\">Designed By Junjie Zhang</el-tag>\n        <br/>\n      </div>\n      <div class=\"online-person\">\n        <span class=\"onlin-text\">聊天列表</span>\n        <div class=\"person-cards-wrapper\">\n          <div\n            class=\"personList\"\n            v-for=\"personInfo in personList\"\n            :key=\"personInfo.id\"\n            @click=\"clickPerson(personInfo)\"\n          >\n            <PersonCard\n              :personInfo=\"personInfo\"\n              :pcCurrent=\"pcCurrent\"\n            ></PersonCard>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"chatRight\">\n      <!-- <router-view></router-view> -->\n      <div v-if=\"showChatWindow\">\n        <ChatWindow\n          :frinedInfo=\"chatWindowInfo\"\n          @personCardSort=\"personCardSort\"\n        ></ChatWindow>\n      </div>\n      <div class=\"showIcon\" v-else>\n        <span class=\"iconfont icon-snapchat\"></span>\n        <!-- <img src=\"@/assets/img/snapchat.png\" alt=\"\" /> -->\n      </div>\n    </div>\n    <!-- <el-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></el-col> -->\n  </div>\n</template>\n\n<script>\nimport PersonCard from '@/components/PersonCard.vue'\nimport ChatWindow from './chatwindow.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    PersonCard,\n    ChatWindow\n  },\n  data() {\n    return {\n      pcCurrent: '',\n      personList: [],\n      showChatWindow: false,\n      chatWindowInfo: {}\n    }\n  },\n  mounted() {\n    this.personList = [\n      {\n        img: '',\n        name: '凤雏',\n        detail: 'Welcome Chat',\n        lastMsg: 'to do',\n        id: '1002',\n        headImg: require('@/assets/img/head_portrait1.jpg')\n      }]\n  },\n  methods: {\n    clickPerson(info) {\n      this.showChatWindow = true\n      this.chatWindowInfo = info\n      this.personInfo = info\n      this.pcCurrent = info.id\n    },\n    personCardSort(id) {\n      if (id !== this.personList[0].id) {\n        console.log(id)\n        let nowPersonInfo\n        for (let i = 0; i < this.personList.length; i++) {\n          if (this.personList[i].id === id) {\n            nowPersonInfo = this.personList[i]\n            this.personList.splice(i, 1)\n            break\n          }\n        }\n        this.personList.unshift(nowPersonInfo)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.chatHome {\n  // margin-top: 20px;\n  display: flex;\n  .chatLeft {\n    width: 280px;\n    .title {\n      color: #fff;\n      padding-left: 10px;\n    }\n    .online-person {\n      margin-top: 60px;\n      .onlin-text {\n        padding-left: 10px;\n        color: rgb(176, 178, 189);\n      }\n      .person-cards-wrapper {\n        padding-left: 10px;\n        height: 65vh;\n        margin-top: 20px;\n        overflow: hidden;\n        overflow-y: scroll;\n        box-sizing: border-box;\n        &::-webkit-scrollbar {\n          width: 0; /* Safari,Chrome 隐藏滚动条 */\n          height: 0; /* Safari,Chrome 隐藏滚动条 */\n          display: none; /* 移动端、pad 上Safari，Chrome，隐藏滚动条 */\n        }\n      }\n    }\n  }\n\n  .chatRight {\n    flex: 1;\n    padding-right: 30px;\n    .showIcon {\n      position: absolute;\n      top: calc(50% - 150px); /*垂直居中 */\n      left: calc(50% - 50px); /*水平居中 */\n      .icon-snapchat {\n        width: 300px;\n        height: 300px;\n        font-size: 300px;\n        // color: rgb(28, 30, 44);\n      }\n    }\n  }\n}\n</style>\n"]}]}